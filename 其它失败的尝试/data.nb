(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    603874,      12009]
NotebookOptionsPosition[    601597,      11939]
NotebookOutlinePosition[    601968,      11955]
CellTagsIndexPosition[    601925,      11952]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "11", ",", "12", ",", "13", ",", "14", ",", "17", ",", "21", ",", "34", 
    ",", "15", ",", "16", ",", "18", ",", "19", ",", "22", ",", "24", ",", 
    "23", ",", "26", ",", "27"}], "}"}], "\:4e0d\:52a8"}]], "Input",
 CellChangeTimes->{3.552474060506836*^9},
 FontWeight->"Plain"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"28", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "28"}], ",", 
     RowBox[{"35", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "35"}], ",", 
     RowBox[{"38", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "38"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"36", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "36"}], ",", 
     RowBox[{"46", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "46"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"35", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "35"}], ",", 
     RowBox[{"44", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "44"}], ",", 
     RowBox[{"56", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "56"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"44", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "44"}], ",", 
     RowBox[{"46", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "46"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.552473775756836*^9, 3.552474030970703*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "11", ",", "12", ",", "13", ",", "14", ",", "17", ",", "21", ",", "34", 
    ",", "15", ",", "16", ",", "18", ",", "19", ",", "22", ",", "24", ",", 
    "23", ",", "26"}], "}"}], "\:4e0d\:52a8"}]], "Input",
 CellChangeTimes->{{3.552474315048828*^9, 3.5524743396640625`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sx1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"27", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "27"}], ",", 
     RowBox[{"29", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "29"}], ",", 
     RowBox[{"36", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "36"}], ",", 
     RowBox[{"44", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "44"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"F1", ";"}], "\[IndentingNewLine]", 
 RowBox[{"F2", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sx2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"27", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "27"}], ",", 
     RowBox[{"28", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "28"}], ",", 
     RowBox[{"35", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "35"}], ",", 
     RowBox[{"37", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "37"}], ",", 
     RowBox[{"39", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "39"}], ",", 
     RowBox[{"44", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "44"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"F3", ";"}], "\[IndentingNewLine]", 
 RowBox[{"F4", ";"}]}], "Input",
 CellChangeTimes->{{3.5524740824501953`*^9, 3.552474141029297*^9}, {
  3.552474196673828*^9, 3.552474297352539*^9}, {3.5524744546308594`*^9, 
  3.552474459908203*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "11", "}"}], "\:4e0d\:52a8"}]], "Input",
 CellChangeTimes->{{3.5524745914072266`*^9, 3.552474594673828*^9}, {
  3.552475106564453*^9, 3.5524751275722656`*^9}, {3.5524754352998047`*^9, 
  3.5524754359072266`*^9}, {3.5524754862128906`*^9, 3.552475486508789*^9}, {
  3.5524757477021484`*^9, 3.552475747915039*^9}, {3.5524759773515625`*^9, 
  3.5524759776884766`*^9}, {3.552476150794922*^9, 3.552476153171875*^9}, {
  3.5524762231259766`*^9, 3.552476223725586*^9}, {3.5524762766953125`*^9, 
  3.5524762772714844`*^9}, {3.5524764348027344`*^9, 3.5524764350664062`*^9}, {
  3.5524765737978516`*^9, 3.5524765742695312`*^9}, {3.552476605086914*^9, 
  3.5524766056865234`*^9}}],

Cell[BoxData[{
 RowBox[{"S5", ";"}], "\[IndentingNewLine]", 
 RowBox[{"S6", ";"}], "\[IndentingNewLine]", 
 RowBox[{"S8", ";"}], "\[IndentingNewLine]", 
 RowBox[{"S7", ";"}], "\[IndentingNewLine]", 
 RowBox[{"S3", ";"}], "\[IndentingNewLine]", 
 RowBox[{"S2", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fr1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"15", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "25"}], ",", 
     RowBox[{"25", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "15"}], ",", 
     RowBox[{"16", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "16"}], ",", 
     RowBox[{"18", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "32"}], ",", 
     RowBox[{"32", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "18"}], ",", 
     RowBox[{"19", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "19"}], ",", 
     RowBox[{"23", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "23"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tw1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"16", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "18"}], ",", 
     RowBox[{"18", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "16"}], ",", 
     RowBox[{"19", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "19"}], ",", 
     RowBox[{"24", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "32"}], ",", 
     RowBox[{"32", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "24"}], ",", 
     RowBox[{"29", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "29"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tl1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"18", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "18"}], ",", 
     RowBox[{"22", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "32"}], ",", 
     RowBox[{"32", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "22"}], ",", 
     RowBox[{"23", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "23"}], ",", 
     RowBox[{"35", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "35"}], ",", 
     RowBox[{"37", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "37"}], ",", 
     RowBox[{"39", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "39"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"El1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"19", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "19"}], ",", 
     RowBox[{"22", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "22"}], ",", 
     RowBox[{"23", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "23"}], ",", 
     RowBox[{"24", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "24"}], ",", 
     RowBox[{"26", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "26"}], ",", 
     RowBox[{"28", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "28"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"22", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "22"}], ",", 
     RowBox[{"24", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "24"}], ",", 
     RowBox[{"27", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "27"}], ",", 
     RowBox[{"35", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "35"}], ",", 
     RowBox[{"37", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "37"}], ",", 
     RowBox[{"39", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "39"}], ",", 
     RowBox[{"44", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "44"}], ",", 
     RowBox[{"55", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "55"}], ",", 
     RowBox[{"58", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "58"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"24", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "24"}], ",", 
     RowBox[{"26", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "26"}], ",", 
     RowBox[{"27", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "27"}], ",", 
     RowBox[{"29", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "29"}], ",", 
     RowBox[{"35", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "35"}], ",", 
     RowBox[{"36", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "36"}], ",", 
     RowBox[{"38", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "38"}], ",", 
     RowBox[{"55", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "55"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"23", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "23"}], ",", 
     RowBox[{"26", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "26"}], ",", 
     RowBox[{"29", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "29"}], ",", 
     RowBox[{"35", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "35"}], ",", 
     RowBox[{"36", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "36"}], ",", 
     RowBox[{"55", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "55"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sv1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"26", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "26"}], ",", 
     RowBox[{"35", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "35"}], ",", 
     RowBox[{"38", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "38"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sx1", ";"}], "\[IndentingNewLine]", 
 RowBox[{"F1", ";"}], "\[IndentingNewLine]", 
 RowBox[{"F2", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sx2", ";"}], "\[IndentingNewLine]", 
 RowBox[{"F3", ";"}], "\[IndentingNewLine]", 
 RowBox[{"F4", ";"}]}], "Input",
 CellChangeTimes->{{3.5524743720771484`*^9, 3.5524744466445312`*^9}, {
   3.5524744769335938`*^9, 3.552474562446289*^9}, {3.5524751123251953`*^9, 
   3.552475248388672*^9}, {3.552475297390625*^9, 3.5524754293476562`*^9}, {
   3.552475473501953*^9, 3.5524755981152344`*^9}, {3.5524756342041016`*^9, 
   3.5524757742578125`*^9}, {3.552475837794922*^9, 3.552475970760742*^9}, {
   3.5524760008916016`*^9, 3.552476146736328*^9}, 3.5524761826689453`*^9, {
   3.5524762179003906`*^9, 3.552476218459961*^9}, {3.552476267140625*^9, 
   3.552476272419922*^9}, {3.5524763484091797`*^9, 3.552476351913086*^9}, {
   3.552476425932617*^9, 3.5524764369873047`*^9}, {3.5524764833164062`*^9, 
   3.5524764898691406`*^9}, {3.5524766000234375`*^9, 3.5524766016865234`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\:4e0d\:52a8"}]], "Input",
 CellChangeTimes->{{3.5524766436816406`*^9, 3.552476648001953*^9}}],

Cell[BoxData[{
 RowBox[{"S9", ";"}], "\[IndentingNewLine]", 
 RowBox[{"S4", ";"}], "\[IndentingNewLine]", 
 RowBox[{"S1", ";"}]}], "Input",
 CellChangeTimes->{{3.552476666754883*^9, 3.5524766694960938`*^9}, {
  3.5524767172890625`*^9, 3.552476718888672*^9}, {3.552476803779297*^9, 
  3.552476805203125*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sl1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"11", "\[Rule]", "17"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"17", "\[Rule]", "19"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"19", "\[Rule]", "13"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"13", "\[Rule]", "11"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"14", "\[Rule]", "18"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"18", "\[Rule]", "16"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"16", "\[Rule]", "12"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"12", "\[Rule]", "14"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"31", "\[Rule]", "61"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"61", "\[Rule]", "43"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"43", "\[Rule]", "53"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"53", "\[Rule]", "31"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"33", "\[Rule]", "63"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"63", "\[Rule]", "41"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"41", "\[Rule]", "51"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"51", "\[Rule]", "33"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"32", "\[Rule]", "62"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"62", "\[Rule]", "42"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"42", "\[Rule]", "52"}], ",", "\"\<S1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "\[Rule]", "32"}], ",", "\"\<S1\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"34", "\[Rule]", "64"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"64", "\[Rule]", "46"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"46", "\[Rule]", "56"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"56", "\[Rule]", "34"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"35", "\[Rule]", "65"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"65", "\[Rule]", "45"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"45", "\[Rule]", "55"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"55", "\[Rule]", "35"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"36", "\[Rule]", "66"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"66", "\[Rule]", "44"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"44", "\[Rule]", "54"}], ",", "\"\<S2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"54", "\[Rule]", "36"}], ",", "\"\<S2\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"21", "\[Rule]", "27"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"27", "\[Rule]", "29"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"29", "\[Rule]", "23"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"23", "\[Rule]", "21"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"24", "\[Rule]", "28"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"28", "\[Rule]", "26"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"26", "\[Rule]", "22"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"22", "\[Rule]", "24"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"37", "\[Rule]", "67"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"67", "\[Rule]", "49"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"49", "\[Rule]", "59"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"59", "\[Rule]", "37"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"39", "\[Rule]", "69"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"69", "\[Rule]", "47"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"47", "\[Rule]", "57"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"57", "\[Rule]", "39"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"38", "\[Rule]", "68"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"68", "\[Rule]", "48"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"48", "\[Rule]", "58"}], ",", "\"\<S3\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"58", "\[Rule]", "38"}], ",", "\"\<S3\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"51", "\[Rule]", "57"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"57", "\[Rule]", "59"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"59", "\[Rule]", "53"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"53", "\[Rule]", "51"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"54", "\[Rule]", "58"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"58", "\[Rule]", "56"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"56", "\[Rule]", "52"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "\[Rule]", "54"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"11", "\[Rule]", "31"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"31", "\[Rule]", "27"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"27", "\[Rule]", "47"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"47", "\[Rule]", "11"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"17", "\[Rule]", "37"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"37", "\[Rule]", "21"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"21", "\[Rule]", "41"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"41", "\[Rule]", "17"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"14", "\[Rule]", "34"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"34", "\[Rule]", "24"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"24", "\[Rule]", "44"}], ",", "\"\<S4\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"44", "\[Rule]", "14"}], ",", "\"\<S4\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"12", "\[Rule]", "32"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"32", "\[Rule]", "28"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"28", "\[Rule]", "48"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"48", "\[Rule]", "12"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"18", "\[Rule]", "38"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"38", "\[Rule]", "22"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"22", "\[Rule]", "42"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"42", "\[Rule]", "18"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"15", "\[Rule]", "35"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"35", "\[Rule]", "25"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"25", "\[Rule]", "45"}], ",", "\"\<S5\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"45", "\[Rule]", "15"}], ",", "\"\<S5\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"61", "\[Rule]", "67"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"67", "\[Rule]", "69"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"69", "\[Rule]", "63"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"63", "\[Rule]", "61"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"64", "\[Rule]", "68"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"68", "\[Rule]", "66"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"66", "\[Rule]", "62"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"62", "\[Rule]", "64"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"13", "\[Rule]", "33"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"33", "\[Rule]", "29"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"29", "\[Rule]", "49"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"49", "\[Rule]", "13"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"19", "\[Rule]", "39"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"39", "\[Rule]", "23"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"23", "\[Rule]", "43"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"43", "\[Rule]", "19"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"16", "\[Rule]", "36"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"36", "\[Rule]", "26"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"26", "\[Rule]", "46"}], ",", "\"\<S6\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"46", "\[Rule]", "16"}], ",", "\"\<S6\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"31", "\[Rule]", "33"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"33", "\[Rule]", "39"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"39", "\[Rule]", "37"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"37", "\[Rule]", "31"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"32", "\[Rule]", "36"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"36", "\[Rule]", "38"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"38", "\[Rule]", "34"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"34", "\[Rule]", "32"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"17", "\[Rule]", "61"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"61", "\[Rule]", "29"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"29", "\[Rule]", "57"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"57", "\[Rule]", "17"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"19", "\[Rule]", "67"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"67", "\[Rule]", "27"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"27", "\[Rule]", "51"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"51", "\[Rule]", "19"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"18", "\[Rule]", "64"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"64", "\[Rule]", "28"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"28", "\[Rule]", "54"}], ",", "\"\<S7\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"54", "\[Rule]", "18"}], ",", "\"\<S7\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"14", "\[Rule]", "62"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"62", "\[Rule]", "26"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"26", "\[Rule]", "58"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"58", "\[Rule]", "14"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"16", "\[Rule]", "68"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"68", "\[Rule]", "24"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"24", "\[Rule]", "52"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "\[Rule]", "16"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"15", "\[Rule]", "65"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"65", "\[Rule]", "25"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"25", "\[Rule]", "55"}], ",", "\"\<S8\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"55", "\[Rule]", "15"}], ",", "\"\<S8\>\""}], "}"}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"Sl9", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"41", "\[Rule]", "43"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"43", "\[Rule]", "49"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"49", "\[Rule]", "47"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"47", "\[Rule]", "41"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"42", "\[Rule]", "46"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"46", "\[Rule]", "48"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"48", "\[Rule]", "44"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"44", "\[Rule]", "42"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"11", "\[Rule]", "63"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"63", "\[Rule]", "23"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"23", "\[Rule]", "59"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"59", "\[Rule]", "11"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"13", "\[Rule]", "69"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"69", "\[Rule]", "21"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"21", "\[Rule]", "53"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"53", "\[Rule]", "13"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"12", "\[Rule]", "66"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"66", "\[Rule]", "22"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"22", "\[Rule]", "56"}], ",", "\"\<S9\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"56", "\[Rule]", "12"}], ",", "\"\<S9\>\""}], "}"}]}], "}"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.5525913715751953`*^9, 3.5525914945810547`*^9}, {
  3.552591671620117*^9, 3.552591843517578*^9}, {3.5525932788134766`*^9, 
  3.5525932898408203`*^9}}],

Cell[BoxData[
 RowBox[{"S9", ";", "S4", ";", "S1", ";", "S5", ";", "S6", ";", "S8", ";", 
  "S7", ";", "S3", ";", "S2", ";", "Fr1", ";", "Tw1", ";", "Tl1", ";", "El1", 
  ";", "T1", ";", "N1", ";", "E1", ";", "Sv1", ";", "Sx1", ";", "F1", ";", 
  "F2", ";", "Sx2", ";", "F3", ";", "F4", ";"}]], "Input",
 CellChangeTimes->{{3.5525919352998047`*^9, 3.5525919849414062`*^9}, {
  3.5527299373359375`*^9, 3.5527299395615234`*^9}}],

Cell[BoxData[{
 RowBox[{"TreePlot", "[", 
  RowBox[{
   RowBox[{
   "S1", "\[Union]", "S2", "\[Union]", "S3", "\[Union]", "S4", "\[Union]", 
    "S5", "\[Union]", "S6", "\[Union]", "S7", "\[Union]", "S8", "\[Union]", 
    "S9"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TreePlot", "[", 
  RowBox[{"Fr1", ",", 
   RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5525913321015625`*^9, 3.5525913332529297`*^9}, {
  3.5525918656416016`*^9, 3.5525918744658203`*^9}, {3.5525920056367188`*^9, 
  3.5525920132060547`*^9}, {3.5525920886347656`*^9, 3.552592102383789*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"11", "\[Rule]", "17"}], ",", 
     RowBox[{"17", "\[Rule]", "19"}], ",", 
     RowBox[{"19", "\[Rule]", "13"}], ",", 
     RowBox[{"13", "\[Rule]", "11"}], ",", 
     RowBox[{"14", "\[Rule]", "18"}], ",", 
     RowBox[{"18", "\[Rule]", "16"}], ",", 
     RowBox[{"16", "\[Rule]", "12"}], ",", 
     RowBox[{"12", "\[Rule]", "14"}], ",", 
     RowBox[{"31", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "31"}], ",", 
     RowBox[{"33", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "41"}], ",", 
     RowBox[{"41", "\[Rule]", "51"}], ",", 
     RowBox[{"51", "\[Rule]", "33"}], ",", 
     RowBox[{"32", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "42"}], ",", 
     RowBox[{"42", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "32"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"34", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "34"}], ",", 
     RowBox[{"35", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "35"}], ",", 
     RowBox[{"36", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "54"}], ",", 
     RowBox[{"54", "\[Rule]", "36"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"21", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "21"}], ",", 
     RowBox[{"24", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "24"}], ",", 
     RowBox[{"37", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "37"}], ",", 
     RowBox[{"39", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "39"}], ",", 
     RowBox[{"38", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "38"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"51", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "51"}], ",", 
     RowBox[{"54", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "54"}], ",", 
     RowBox[{"11", "\[Rule]", "31"}], ",", 
     RowBox[{"31", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "11"}], ",", 
     RowBox[{"17", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "21"}], ",", 
     RowBox[{"21", "\[Rule]", "41"}], ",", 
     RowBox[{"41", "\[Rule]", "17"}], ",", 
     RowBox[{"14", "\[Rule]", "34"}], ",", 
     RowBox[{"34", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "14"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"12", "\[Rule]", "32"}], ",", 
     RowBox[{"32", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "12"}], ",", 
     RowBox[{"18", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "42"}], ",", 
     RowBox[{"42", "\[Rule]", "18"}], ",", 
     RowBox[{"15", "\[Rule]", "35"}], ",", 
     RowBox[{"35", "\[Rule]", "25"}], ",", 
     RowBox[{"25", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "15"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"61", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "61"}], ",", 
     RowBox[{"64", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "64"}], ",", 
     RowBox[{"13", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "13"}], ",", 
     RowBox[{"19", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "19"}], ",", 
     RowBox[{"16", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "16"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"31", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "31"}], ",", 
     RowBox[{"32", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "34"}], ",", 
     RowBox[{"34", "\[Rule]", "32"}], ",", 
     RowBox[{"17", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "17"}], ",", 
     RowBox[{"19", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "51"}], ",", 
     RowBox[{"51", "\[Rule]", "19"}], ",", 
     RowBox[{"18", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "54"}], ",", 
     RowBox[{"54", "\[Rule]", "18"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"14", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "14"}], ",", 
     RowBox[{"16", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "16"}], ",", 
     RowBox[{"15", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "25"}], ",", 
     RowBox[{"25", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "15"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S9", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"41", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "41"}], ",", 
     RowBox[{"42", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "42"}], ",", 
     RowBox[{"11", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "11"}], ",", 
     RowBox[{"13", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "21"}], ",", 
     RowBox[{"21", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "13"}], ",", 
     RowBox[{"12", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "12"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"StartSet", "=", 
   RowBox[{"{", 
    RowBox[{
    "31", ",", "32", ",", "33", ",", "34", ",", "35", ",", "36", ",", "37", 
     ",", "38", ",", "39", ",", "41", ",", "42", ",", "43", ",", "44", ",", 
     "45", ",", "46", ",", "47", ",", "48", ",", "49", ",", "51", ",", "52", 
     ",", "53", ",", "54", ",", "55", ",", "56", ",", "57", ",", "58", ",", 
     "59", ",", "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", 
     ",", "67", ",", "68", ",", "69", ",", "11", ",", "12", ",", "13", ",", 
     "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "21", 
     ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
     "28", ",", "29"}], "}"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtractSet", "[", 
   RowBox[{"StartSet_", ",", "Tans_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"StrtSt", "=", "StartSet"}], ",", 
      RowBox[{"ndSt", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"myi", "=", "1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ndSt", "=", 
      RowBox[{"StrtSt", "/.", "Tans"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"myi", "\[LessEqual]", 
        RowBox[{"Length", "[", "StrtSt", "]"}]}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StrtSt", "[", 
            RowBox[{"[", "myi", "]"}], "]"}], "\[Equal]", 
           RowBox[{"ndSt", "[", 
            RowBox[{"[", "myi", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"StrtSt", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"StrtSt", ",", "myi"}], "]"}]}], ";", 
           RowBox[{"ndSt", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"ndSt", ",", "myi"}], "]"}]}], ";", 
           RowBox[{"myi", "--"}]}]}], "]"}], ";", 
        RowBox[{"myi", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"StrtSt", ",", "ndSt"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TnsFrm", "[", 
   RowBox[{"StartSet_", ",", "Tans_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"keepp", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"pic", "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "}"}], "&"}], ",", "6"}], "]"}]}], ",", 
      RowBox[{"xtrctSt", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"pic", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", 
             RowBox[{"Blue", ",", 
              RowBox[{"Texture", "[", 
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
9W1vv+QlO/fsOP37f/s3fbXpRiLUi903TaHmxlW6s4k1cIe3TGyRsH6OuREe
tUSeTx+EHmdyGTNJ/xjjT5VpaDi03NLiAZqN1gLQ0lzNaIJBqd61IG2ekxVN
LLi9cLPymGxRZU3N0ZXR0urEyRv+/KN7Tt+57yU7r/mD33/qtjtH4D72wMPX
vur1F+zYefell46s/sShZ37wD/+w/+Uv27ex48pXveLQ3fd0t8gEebi+IRPh
S8Nbe16rh+1ZoFQ8kqpGG0nRHWL65bO/uPvKl79i/7bT9mzbceGu03/66X/L
m6ujDz1w9dvf8PP95w3f8/TPb7vqDa/Zf8bO/afv2r9t46ef+v98gxh6F8oz
zpXH7sxuU8kB0VquUgxDGGRxL4IjJxlffBgzpkKx6abOxlEApsaMc2BgkdGE
Oh/UHzZq8cVhhfuWOI++tZGjZyike9OaIQxS3bS66a/+7vwzdly4fdt/buy6
5vVvP3znvWWabvuXT335XW878vjjqxeO/vCf//6iM06/cNeL9r1ox5Wvfs0L
Bw64vQfoKotawhwgBxxm8bf058BGZTQulHjNTAXC6aSMa0rp7gv3XfaKc/fu
2Lhg27bLd7/k0Ru+3ab01E03HX/6qZOHjnzjTz5ywcbO83Zu27d793f+5P8+
8vAvW6j1TX4T3USelBZ8DMqgDrdszbVAruJBL+CDnirbTUNVDVqa40pXYwiz
gzDcIR+CzebgCSSrMmNS6HFqFEb4FCjRYk1BaszpT8IMks+KviInI7sOE9IB
Hr77vuve8/sX7j7j/J3b9m+cdsuHP3zyxJHjjx545gc/GEt74MvXXnTm7n2n
n3bxGduvec2r77niKvnjLioZcMDDtIvZiYDxZQpLi1qKdFz5yKinIVc9flFg
u0QsEoetpoO33nHn5z77g4995Pr3vf+uz+8pmxojOdbu4J13fPfPPnrT+//0
J//4Vw999UvHDz1d6NheJ4NMQAd9n41+I/Nr0YVm2byYF7XF0QqcSoy6Mjdn
eaoF677EpXgojj3GErdE6/Sup9k2T6hzMxIGR7NUtrqlWI/gbgq1909ygLNV
GTn5anFPK6GMsojwxNNPH7j22h9+8pPf/uAHb/zYnx9+8AGPKs0nTtz6qc/c
9P4P3PwXH//5+ecduvuulXipFA0E7vilCSJkfS5pNJYC/5yNOKtNqsbcpTUo
bL+ICkzpqzPiabNububViREgxayLTJxWq5Njg4rHjNOOYqknjCzTOUGIxYyo
KE4eLeCuCuMLHngAvK0+2biuE6SD1mmPMKO05MXixkG65Dhq3P5QEDVa/VHt
VD3CYq6B/kNwN0vO3b8lBH/mihVPLTVt5fmTUBTknNAEXLeyKulk2tycDHDL
QnrS5QOrVdr0CiDFkQY3m28hhybPRFHb3CuZrYE2QNOdLbQga2jJt2TVRxXU
3z3YysH7tJZxxd2xXEfotvRo+wwNPFfbWlehVcjGGgF/PWTSw6whR1GpJkis
xQru5CuSxmHyOJZk9cc0R7sF84dTTJNATYLXhCGRTS0uHWma79LiuZUQF0RX
KXURKWgQNyzF2i/iNJghEKySc3yoCp+lglgZ0MFb3Bf3WHj2L39GbJmLmW5P
eKUwQVzsi91V8vl6UefA8HGL25l4huzb3RZqpvGzjGpFvOeQFS0kVMEphWw8
EKwU/El1mRprxeIbuLTYobVVUK8m1jr9XOoKkff36xSnpMBndjGUUlD1YBVo
e4oeVACkpUjZtRANmJpEnKPbtcXVLihTELEZ7UJubiqvAwlWY/fJ+qgc8oNT
U89CqsOO5xpjGo1QGd50577HVDRTdYC/wPoT/WuMcJRWufiuZLHRnV533Vg6
tWhQFoHRtvK81gtRieiStcWhUbdjZlwquGby4BBr4lqLKxitFXJ/aSuhUawx
Id1XBsywqJZX6mqubsS1wuRY/qcvKyY5uuvfGWusMd8R38k0YpZrlY3heTwp
dfjs/mL103c3S+Z2alqiHWLobSFFtBzwqUQOq2zGP1y1iFNL3MtrER0sfbYT
lR+d4KVggERUMHLFW2xUf45hHJmr2+paNmEu0aSOsVjwr7jheNb3jTJV2bbH
Q0vlbzkcwhQ6WLrIBLY0enNcI9IT796OTIudcYAK4qTW22pVKLwOLVXW5S1Y
sx/NUFNo5XwzshzswnLUcqp5x9oFmKER6Jfqup7Rk3EDCBfHpNkJu4rgbAoQ
0bkwCBQOoLIz/3DTQlFGt3Q3NxuZdndQcQqMhVKH0BEoS7GI0SkBaX+MrWWk
hW5Z4qymtV6l57gqJyy3lnWY4s4GiX6K+ytB0iAzVPtrlI4mrfXQmmaX8zIC
+hMq3eroV1qwmdQA6/bgedXyFB3pfC3l1GIVhmAUayZadHmR2szdDZalWHzt
LhXvtkEIZmb5uHENAhsp+sNjy5ywGd9dU+Vc27kVEs15pXy+uPcUHEmr0LlR
jjsrOGGVpuqUooOZ8DCvPHGGXAbQO6+7fWgTr9pbO3LUZN47pBFpTczxZRqB
uzDTGG9uqMmThTNKF+qrxcAXTSbFibznd2oEII0S0SwZIrrmbLDbrxFzjPVh
IaXTMTgjDpQlztqOWblGsjJEEk5Oj5WnzR2fUFZwFzrEqVmpM7v9xJ0V4xNX
fcWzk4cpRvt6ZP467meuPe5F0AAbboeTpUPrzzUkUNkObz3RSgi12mbKWtjP
dSewT8gLXbrT8D+bs8On6FvS1uKIZeUzCWVp63voC4XRsNwpqBH3yngmdwzy
0edG85IlGiOiMdTelu4moRDTecqK7gK0cK6WUAfNIwv1jQMYsK/u8Ejz7BIm
W10EgBAznricBz7LKZz7Z7lpq1puDreuSqS7PR7kMEclkF0fYaU5euPiCoOe
fbnFlJPdAFej+L4vc46ehuDWymJJdXV2Qma8VOeZyIxWIfFptCbZcSh3YHw3
XVegqPLvk4dfeNFkT0sIJKw8D1mc7+Xpnukw+UaX5j77GBvgq0/n9d1jdJbF
rbPoaavbPmlQQtYk4LxPidteAjHirkOOFYyoGtSZVcN1tXYdXq0YpkJESs3h
ttoL+94Mg3R4VQehOdJpzgpcfwmCko0JtQ0ktd8LoJY+Afphs5to3QC4JpO6
5xx1eIPCEK8aMbxG+36khUmXPeK+Df0ZMyyG+qZ12w4trmSOjDu1bouQl91I
4ZEeky/vri1E3aR1al2gXlSO5OYdGTvr788ACLa4GOolE1SlWHRHO+5ekt0S
u8jluJ70W0wgd+tJAa/oQTXwifFCREyc6XlpDMtmBlnc+svhpxtALCyYzMII
BPUhsXKWy0k879uWEB8YLuIKM249FjMYq0U1yPQNEBMqAve3GWjHbJVKIbu0
VAiX0IMX9GVWChWp+sriRtTyiBKabYBxCYwuVsxZBDfKdUC+QzTrMkDT/bGO
CRGf0t/mex7NvnMJUmxNoGA5WwqPAkRVZIkC3knxTIO9Z7yR93ieJ0WzPRoq
cjji6NoKcd+8JGuPkdu7pqqhL88O4mbeuqUqzTeVi4kwfgStR4M+BbwQ09md
KyYbtG6i7CkG3JmBTCJWgel5Tpeae6/6Wn3rm0roy1Ha6rBVTcXXSEV9SwLT
LNatAqfGkWW7nuKsiAbIZC5HazyveRN0KdR52e3hDVA+WeIsingmVCkDccmk
KfKe4x2VpWKz6zrr9IoVE2tdsFWzSWK8SFmYHJbX40hwPyEHpB3Ck/QF0W7B
iEEr98mXduiRxPMYWOAFUR2Zu3XTJM4Nlflk9plGHDWuwOCLyM5WChtAb14m
6azxV3md2NAo5cZpMdqJVmmWkXBCM2aMKE1WXht16NWXJAZm7Kqy0TqGhxDw
Z62YtDAI1XmXuXgOO4CUOuRzdrjSSO9uvT4jPUrgFat08tDBkjatRa2Lkb7J
NTS4jqsrkoMSeGDcXZ+598Nt9UwGni12X3CZHlrdEeM0gsEoMhf3LhVf7Tp7
qLpoi+yZ/dAWNWZ+VHctAVBhKpryhmx8hlSzhJ6TqlUI2T6kKdBMdlI+Dswk
V4GRthhMIElADDHh6hLgh7SYOmqhj+yhl3I/u4Ve1fdNEPspn7h7PkSJNoPW
Ugx84ZYhA2K+r94H0Fdy6crKOy/c/+W3/s6DV15eV5lJ96FyQY/utuRq0Z1M
0aongpLTtHnNQta6vhcRtdApGZLbP7hihaR8JsOknSkVa7cSRF4qIQHgkMLa
wPA1O2N5wpScIWqCoqIFERMsEpW4GttZlT6bs0SdxtWX1Am+tWJez4hA4ugT
hDXpU2ifEzqxrjknz8ykP7jUNS2MB1wRpn1xkvFGS4NVzCiBmyhQAp9rdcXf
XUzLm6KoRx985Iuveu3520//0pt+68gTT1blDzSxzHFp6a9ElW60sI9wUCgR
trqhN0qgGuIKd8qYKfZwUAphlMXCFfxz1VPV3H7obua5T1Zgjy+cm/sr+Wsh
/uSGbGUfZNvZaa8FMlanZTtnprRm35djRNShx0qQ6E3Cx9JkT524FM+Y67Nx
a/424/3BAyOzYlwg5KDV4U6QRpK7shABKZwLHbQAaqshJhAPPHrHn1TqwVt+
tO+s3Xt2vfi8c1/61B33xJBzQ4kex+QBZJAN3eJc2MYW+WWOKQlxu2K2dUuI
QXOha7hiPEFFmYrxqea1gN/JO9N8DBKhAGiSBTE1gI6H6pGh1eV0XKsLppzN
+3pmWIubkVKPOBadkNX9poAlCTQZwLqGiL8K1OJuuJlTYqEv6tiADfoKQU0N
D2TErRpv8ZVXWuopVV+YYCTaVz24NtoyQZCHqz/6y8eef/BAOnJMjzcvh2+/
+wsvPXvfjm37X3nuC/cfQGnTVsdOPP/AI8ce+WXJEzNOJXBi5CCuEFtxt1n1
ZdUu3athN7CqzG04bd2+ghTYTXuMlgUTl8v13cyW8CQG31iMaUwKGpUImv1h
oeBWze3v8KjliiNhkXSjRI8h0YUjpJC5tDUmbh1HDiIbLVeLwajUaiTsI2Xa
Sr7dzxKe3nwfijEzH44ZJw+9Ij1jzDoyv4D/0VpuGXjQbo1y/LFvffuqN7zx
it98/ff+9COH775vnPrp0HPXveOte3ft+Np7/7gcPTI+8emf33bDBz502at/
+8rXvf7RH96UufocYJszzQyExYPR5+zpFIgutfczSIuGRLjVnS4X5rETr5Kv
w3HfRnOnXzPC5zY5ezNmmyu5cEeYBbSewThnd9AD2iOaNRpCB5z/iblUFCs9
Wf1JsQLkNRuCdiNGQZ7qSRYgi0CibkfseQ3r8EEmulJ2nNPVTjQvQ7DiGWc3
U3o4EL/MQpf4eNC7Mvzqffv37929e8/pO/Zu33b1W373+V/cM572ngsvuvTM
lz5wzeXjRw/+7OdXveX1523sPG/3jj27dz1wzZVl3TSwblwrPXpS6bsmJ/E4
jrKWfFLHMaemBG63UGq1FZ3bDWCj0jnZkWGWQKWMx6uf13c+d49x8w2VSCW7
r6BI65lrnoGnNWBuyIpZ3J5xtfhSpjlZs1lmK2Maxb6yCzdSSD5JXQ71Jf1I
29K1Rgs6XLdJwTx6Vr8nonT7/zTi4oJ3nT13S+2NVElOQDVQHtJqi0aiUg7d
c+/lr/3NPRvbL9i54/yNjVs+/rF6fHXsySd+8Jd/c/Tw0yefP3b9Bz6894yN
PTt3XLB9xzVvfNPRhx6yUk2vOJ5tNbvNBCmaCRzgGhfi7t/3nSPCPJD+t+jX
anElijvSi9OUGWm8yZ2Yj+bZiR6b1UPLKjjFMJ/xUyYPFPe0RUpT/n9ahhgp

                  "], {{0, 128}, {128, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                BaseStyle->"ImageGraphics",
                ImageSizeRaw->{128, 128},
                PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"j", "-", "1"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "j", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "j", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}]}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pic", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", 
             RowBox[{"White", ",", 
              RowBox[{"Texture", "[", 
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                  "], {{0, 128}, {128, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                BaseStyle->"ImageGraphics",
                ImageSizeRaw->{128, 128},
                PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "j", ",", "3"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"j", "-", "1"}], ",", "3"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "-", "1"}], ",", "3"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "j", ",", "3"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pic", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", 
             RowBox[{"Green", ",", 
              RowBox[{"Texture", "[", 
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                  "], {{0, 128}, {128, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                BaseStyle->"ImageGraphics",
                ImageSizeRaw->{128, 128},
                PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "3", ",", 
                 RowBox[{"j", "-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "3", ",", "j"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "3", ",", "j"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "3", ",", 
                 RowBox[{"j", "-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pic", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"Texture", "[", 
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                  "], {{0, 128}, {128, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                BaseStyle->"ImageGraphics",
                ImageSizeRaw->{128, 128},
                PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "0", ",", "j"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "0", ",", 
                 RowBox[{"j", "-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", 
                 RowBox[{"j", "-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "j"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pic", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", 
             RowBox[{"Yellow", ",", 
              RowBox[{"Texture", "[", 
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                  "], {{0, 128}, {128, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                BaseStyle->"ImageGraphics",
                ImageSizeRaw->{128, 128},
                PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"3", "-", "j"}], ",", 
                 RowBox[{"i", "-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"3", "-", "j"}], ",", "i"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"4", "-", "j"}], ",", "i"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"4", "-", "j"}], ",", 
                 RowBox[{"i", "-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pic", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FaceForm", "[", 
             RowBox[{"Purple", ",", 
              RowBox[{"Texture", "[", 
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                  "], {{0, 128}, {128, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                BaseStyle->"ImageGraphics",
                ImageSizeRaw->{128, 128},
                PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"3", ",", 
                 RowBox[{"3", "-", "j"}], ",", "i"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", 
                 RowBox[{"3", "-", "j"}], ",", 
                 RowBox[{"i", "-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", 
                 RowBox[{"4", "-", "j"}], ",", 
                 RowBox[{"i", "-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", 
                 RowBox[{"4", "-", "j"}], ",", "i"}], "}"}]}], "}"}], "]"}]}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xtrctSt", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"ExtractSet", "[", 
        RowBox[{"StartSet", ",", "Tans"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"xtrctSt", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"keepp", ",", 
         RowBox[{"pic", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"xtrctSt", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"xtrctSt", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "i", ",", "2"}], "]"}], "]"}], ",", "1"}], 
           "]"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", 
         RowBox[{"xtrctSt", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"pic", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"xtrctSt", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"xtrctSt", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i", ",", "2"}], "]"}], "]"}], ",", "1"}], 
          "]"}], "]"}], "=", 
        RowBox[{"keepp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"pic", ",", 
        RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}], "]"}], ";"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TnsFrmMntn", "[", 
    RowBox[{"StartSet_", ",", "Tans_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"keepp", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"xtrctSt", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"pic", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "}"}], "&"}], ",", "6"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"pic", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Texture", "[", 
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                   "], {{0, 128}, {128, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 BaseStyle->"ImageGraphics",
                 ImageSizeRaw->{128, 128},
                 PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", 
                  RowBox[{"j", "-", "1"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "j", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"j", "-", "1"}], ",", "0"}], "}"}]}], "}"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pic", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "[", 
              RowBox[{"White", ",", 
               RowBox[{"Texture", "[", 
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
9W1vv+QlO/fsOP37f/s3fbXpRiLUi903TaHmxlW6s4k1cIe3TGyRsH6OuREe
tUSeTx+EHmdyGTNJ/xjjT5VpaDi03NLiAZqN1gLQ0lzNaIJBqd61IG2ekxVN
LLi9cLPymGxRZU3N0ZXR0urEyRv+/KN7Tt+57yU7r/mD33/qtjtH4D72wMPX
vur1F+zYefell46s/sShZ37wD/+w/+Uv27ex48pXveLQ3fd0t8gEebi+IRPh
S8Nbe16rh+1ZoFQ8kqpGG0nRHWL65bO/uPvKl79i/7bT9mzbceGu03/66X/L
m6ujDz1w9dvf8PP95w3f8/TPb7vqDa/Zf8bO/afv2r9t46ef+v98gxh6F8oz
zpXH7sxuU8kB0VquUgxDGGRxL4IjJxlffBgzpkKx6abOxlEApsaMc2BgkdGE
Oh/UHzZq8cVhhfuWOI++tZGjZyike9OaIQxS3bS66a/+7vwzdly4fdt/buy6
5vVvP3znvWWabvuXT335XW878vjjqxeO/vCf//6iM06/cNeL9r1ox5Wvfs0L
Bw64vQfoKotawhwgBxxm8bf058BGZTQulHjNTAXC6aSMa0rp7gv3XfaKc/fu
2Lhg27bLd7/k0Ru+3ab01E03HX/6qZOHjnzjTz5ywcbO83Zu27d793f+5P8+
8vAvW6j1TX4T3USelBZ8DMqgDrdszbVAruJBL+CDnirbTUNVDVqa40pXYwiz
gzDcIR+CzebgCSSrMmNS6HFqFEb4FCjRYk1BaszpT8IMks+KviInI7sOE9IB
Hr77vuve8/sX7j7j/J3b9m+cdsuHP3zyxJHjjx545gc/GEt74MvXXnTm7n2n
n3bxGduvec2r77niKvnjLioZcMDDtIvZiYDxZQpLi1qKdFz5yKinIVc9flFg
u0QsEoetpoO33nHn5z77g4995Pr3vf+uz+8pmxojOdbu4J13fPfPPnrT+//0
J//4Vw999UvHDz1d6NheJ4NMQAd9n41+I/Nr0YVm2byYF7XF0QqcSoy6Mjdn
eaoF677EpXgojj3GErdE6/Sup9k2T6hzMxIGR7NUtrqlWI/gbgq1909ygLNV
GTn5anFPK6GMsojwxNNPH7j22h9+8pPf/uAHb/zYnx9+8AGPKs0nTtz6qc/c
9P4P3PwXH//5+ecduvuulXipFA0E7vilCSJkfS5pNJYC/5yNOKtNqsbcpTUo
bL+ICkzpqzPiabNububViREgxayLTJxWq5Njg4rHjNOOYqknjCzTOUGIxYyo
KE4eLeCuCuMLHngAvK0+2biuE6SD1mmPMKO05MXixkG65Dhq3P5QEDVa/VHt
VD3CYq6B/kNwN0vO3b8lBH/mihVPLTVt5fmTUBTknNAEXLeyKulk2tycDHDL
QnrS5QOrVdr0CiDFkQY3m28hhybPRFHb3CuZrYE2QNOdLbQga2jJt2TVRxXU
3z3YysH7tJZxxd2xXEfotvRo+wwNPFfbWlehVcjGGgF/PWTSw6whR1GpJkis
xQru5CuSxmHyOJZk9cc0R7sF84dTTJNATYLXhCGRTS0uHWma79LiuZUQF0RX
KXURKWgQNyzF2i/iNJghEKySc3yoCp+lglgZ0MFb3Bf3WHj2L39GbJmLmW5P
eKUwQVzsi91V8vl6UefA8HGL25l4huzb3RZqpvGzjGpFvOeQFS0kVMEphWw8
EKwU/El1mRprxeIbuLTYobVVUK8m1jr9XOoKkff36xSnpMBndjGUUlD1YBVo
e4oeVACkpUjZtRANmJpEnKPbtcXVLihTELEZ7UJubiqvAwlWY/fJ+qgc8oNT
U89CqsOO5xpjGo1QGd50577HVDRTdYC/wPoT/WuMcJRWufiuZLHRnV533Vg6
tWhQFoHRtvK81gtRieiStcWhUbdjZlwquGby4BBr4lqLKxitFXJ/aSuhUawx
Id1XBsywqJZX6mqubsS1wuRY/qcvKyY5uuvfGWusMd8R38k0YpZrlY3heTwp
dfjs/mL103c3S+Z2alqiHWLobSFFtBzwqUQOq2zGP1y1iFNL3MtrER0sfbYT
lR+d4KVggERUMHLFW2xUf45hHJmr2+paNmEu0aSOsVjwr7jheNb3jTJV2bbH
Q0vlbzkcwhQ6WLrIBLY0enNcI9IT796OTIudcYAK4qTW22pVKLwOLVXW5S1Y
sx/NUFNo5XwzshzswnLUcqp5x9oFmKER6Jfqup7Rk3EDCBfHpNkJu4rgbAoQ
0bkwCBQOoLIz/3DTQlFGt3Q3NxuZdndQcQqMhVKH0BEoS7GI0SkBaX+MrWWk
hW5Z4qymtV6l57gqJyy3lnWY4s4GiX6K+ytB0iAzVPtrlI4mrfXQmmaX8zIC
+hMq3eroV1qwmdQA6/bgedXyFB3pfC3l1GIVhmAUayZadHmR2szdDZalWHzt
LhXvtkEIZmb5uHENAhsp+sNjy5ywGd9dU+Vc27kVEs15pXy+uPcUHEmr0LlR
jjsrOGGVpuqUooOZ8DCvPHGGXAbQO6+7fWgTr9pbO3LUZN47pBFpTczxZRqB
uzDTGG9uqMmThTNKF+qrxcAXTSbFibznd2oEII0S0SwZIrrmbLDbrxFzjPVh
IaXTMTgjDpQlztqOWblGsjJEEk5Oj5WnzR2fUFZwFzrEqVmpM7v9xJ0V4xNX
fcWzk4cpRvt6ZP467meuPe5F0AAbboeTpUPrzzUkUNkObz3RSgi12mbKWtjP
dSewT8gLXbrT8D+bs8On6FvS1uKIZeUzCWVp63voC4XRsNwpqBH3yngmdwzy
0edG85IlGiOiMdTelu4moRDTecqK7gK0cK6WUAfNIwv1jQMYsK/u8Ejz7BIm
W10EgBAznricBz7LKZz7Z7lpq1puDreuSqS7PR7kMEclkF0fYaU5euPiCoOe
fbnFlJPdAFej+L4vc46ehuDWymJJdXV2Qma8VOeZyIxWIfFptCbZcSh3YHw3
XVegqPLvk4dfeNFkT0sIJKw8D1mc7+Xpnukw+UaX5j77GBvgq0/n9d1jdJbF
rbPoaavbPmlQQtYk4LxPidteAjHirkOOFYyoGtSZVcN1tXYdXq0YpkJESs3h
ttoL+94Mg3R4VQehOdJpzgpcfwmCko0JtQ0ktd8LoJY+Afphs5to3QC4JpO6
5xx1eIPCEK8aMbxG+36khUmXPeK+Df0ZMyyG+qZ12w4trmSOjDu1bouQl91I
4ZEeky/vri1E3aR1al2gXlSO5OYdGTvr788ACLa4GOolE1SlWHRHO+5ekt0S
u8jluJ70W0wgd+tJAa/oQTXwifFCREyc6XlpDMtmBlnc+svhpxtALCyYzMII
BPUhsXKWy0k879uWEB8YLuIKM249FjMYq0U1yPQNEBMqAve3GWjHbJVKIbu0
VAiX0IMX9GVWChWp+sriRtTyiBKabYBxCYwuVsxZBDfKdUC+QzTrMkDT/bGO
CRGf0t/mex7NvnMJUmxNoGA5WwqPAkRVZIkC3knxTIO9Z7yR93ieJ0WzPRoq
cjji6NoKcd+8JGuPkdu7pqqhL88O4mbeuqUqzTeVi4kwfgStR4M+BbwQ09md
KyYbtG6i7CkG3JmBTCJWgel5Tpeae6/6Wn3rm0roy1Ha6rBVTcXXSEV9SwLT
LNatAqfGkWW7nuKsiAbIZC5HazyveRN0KdR52e3hDVA+WeIsingmVCkDccmk
KfKe4x2VpWKz6zrr9IoVE2tdsFWzSWK8SFmYHJbX40hwPyEHpB3Ck/QF0W7B
iEEr98mXduiRxPMYWOAFUR2Zu3XTJM4Nlflk9plGHDWuwOCLyM5WChtAb14m
6azxV3md2NAo5cZpMdqJVmmWkXBCM2aMKE1WXht16NWXJAZm7Kqy0TqGhxDw
Z62YtDAI1XmXuXgOO4CUOuRzdrjSSO9uvT4jPUrgFat08tDBkjatRa2Lkb7J
NTS4jqsrkoMSeGDcXZ+598Nt9UwGni12X3CZHlrdEeM0gsEoMhf3LhVf7Tp7
qLpoi+yZ/dAWNWZ+VHctAVBhKpryhmx8hlSzhJ6TqlUI2T6kKdBMdlI+Dswk
V4GRthhMIElADDHh6hLgh7SYOmqhj+yhl3I/u4Ve1fdNEPspn7h7PkSJNoPW
Ugx84ZYhA2K+r94H0Fdy6crKOy/c/+W3/s6DV15eV5lJ96FyQY/utuRq0Z1M
0aongpLTtHnNQta6vhcRtdApGZLbP7hihaR8JsOknSkVa7cSRF4qIQHgkMLa
wPA1O2N5wpScIWqCoqIFERMsEpW4GttZlT6bs0SdxtWX1Am+tWJez4hA4ugT
hDXpU2ifEzqxrjknz8ykP7jUNS2MB1wRpn1xkvFGS4NVzCiBmyhQAp9rdcXf
XUzLm6KoRx985Iuveu3520//0pt+68gTT1blDzSxzHFp6a9ElW60sI9wUCgR
trqhN0qgGuIKd8qYKfZwUAphlMXCFfxz1VPV3H7obua5T1Zgjy+cm/sr+Wsh
/uSGbGUfZNvZaa8FMlanZTtnprRm35djRNShx0qQ6E3Cx9JkT524FM+Y67Nx
a/424/3BAyOzYlwg5KDV4U6QRpK7shABKZwLHbQAaqshJhAPPHrHn1TqwVt+
tO+s3Xt2vfi8c1/61B33xJBzQ4kex+QBZJAN3eJc2MYW+WWOKQlxu2K2dUuI
QXOha7hiPEFFmYrxqea1gN/JO9N8DBKhAGiSBTE1gI6H6pGh1eV0XKsLppzN
+3pmWIubkVKPOBadkNX9poAlCTQZwLqGiL8K1OJuuJlTYqEv6tiADfoKQU0N
D2TErRpv8ZVXWuopVV+YYCTaVz24NtoyQZCHqz/6y8eef/BAOnJMjzcvh2+/
+wsvPXvfjm37X3nuC/cfQGnTVsdOPP/AI8ce+WXJEzNOJXBi5CCuEFtxt1n1
ZdUu3athN7CqzG04bd2+ghTYTXuMlgUTl8v13cyW8CQG31iMaUwKGpUImv1h
oeBWze3v8KjliiNhkXSjRI8h0YUjpJC5tDUmbh1HDiIbLVeLwajUaiTsI2Xa
Sr7dzxKe3nwfijEzH44ZJw+9Ij1jzDoyv4D/0VpuGXjQbo1y/LFvffuqN7zx
it98/ff+9COH775vnPrp0HPXveOte3ft+Np7/7gcPTI+8emf33bDBz502at/
+8rXvf7RH96UufocYJszzQyExYPR5+zpFIgutfczSIuGRLjVnS4X5rETr5Kv
w3HfRnOnXzPC5zY5ezNmmyu5cEeYBbSewThnd9AD2iOaNRpCB5z/iblUFCs9
Wf1JsQLkNRuCdiNGQZ7qSRYgi0CibkfseQ3r8EEmulJ2nNPVTjQvQ7DiGWc3
U3o4EL/MQpf4eNC7Mvzqffv37929e8/pO/Zu33b1W373+V/cM572ngsvuvTM
lz5wzeXjRw/+7OdXveX1523sPG/3jj27dz1wzZVl3TSwblwrPXpS6bsmJ/E4
jrKWfFLHMaemBG63UGq1FZ3bDWCj0jnZkWGWQKWMx6uf13c+d49x8w2VSCW7
r6BI65lrnoGnNWBuyIpZ3J5xtfhSpjlZs1lmK2Maxb6yCzdSSD5JXQ71Jf1I
29K1Rgs6XLdJwTx6Vr8nonT7/zTi4oJ3nT13S+2NVElOQDVQHtJqi0aiUg7d
c+/lr/3NPRvbL9i54/yNjVs+/rF6fHXsySd+8Jd/c/Tw0yefP3b9Bz6894yN
PTt3XLB9xzVvfNPRhx6yUk2vOJ5tNbvNBCmaCRzgGhfi7t/3nSPCPJD+t+jX
anElijvSi9OUGWm8yZ2Yj+bZiR6b1UPLKjjFMJ/xUyYPFPe0RUpT/n9ahhgp

                   "], {{0, 128}, {128, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 BaseStyle->"ImageGraphics",
                 ImageSizeRaw->{128, 128},
                 PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "j", ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", 
                  RowBox[{"j", "-", "1"}], ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"j", "-", "1"}], ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j", ",", "3"}], "}"}]}], "}"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pic", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "[", 
              RowBox[{"Green", ",", 
               RowBox[{"Texture", "[", 
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                   "], {{0, 128}, {128, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 BaseStyle->"ImageGraphics",
                 ImageSizeRaw->{128, 128},
                 PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "3", ",", 
                  RowBox[{"j", "-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "3", ",", "j"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "3", ",", "j"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "3", ",", 
                  RowBox[{"j", "-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pic", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "[", 
              RowBox[{"Red", ",", 
               RowBox[{"Texture", "[", 
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                   "], {{0, 128}, {128, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 BaseStyle->"ImageGraphics",
                 ImageSizeRaw->{128, 128},
                 PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "0", ",", "j"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", "0", ",", 
                  RowBox[{"j", "-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0", ",", 
                  RowBox[{"j", "-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0", ",", "j"}], "}"}]}], "}"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pic", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "[", 
              RowBox[{"Yellow", ",", 
               RowBox[{"Texture", "[", 
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                   "], {{0, 128}, {128, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 BaseStyle->"ImageGraphics",
                 ImageSizeRaw->{128, 128},
                 PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"3", "-", "j"}], ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"3", "-", "j"}], ",", "i"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"4", "-", "j"}], ",", "i"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"4", "-", "j"}], ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pic", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FaceForm", "[", 
              RowBox[{"Purple", ",", 
               RowBox[{"Texture", "[", 
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJxNvfnXZ1V17ptx7/3h/hv39wyl6q0qKAOCil1i7DKMXYwxJp4bm8TY3Jg+
Jufm6klikqNCUVW0Io0iIjYoiNiigID0BdJTRQHVvt+92r3fjHHX83nmtzwZ
BIuqt77fvdeaazbP88y5/q8//LM3v+9/+7Vf+7WP/p/jX29+z1+87CMfec9f
/s7/Mf7j5X/5sT/+w/99/OIf4v/161JTL63XWnouuY1/Wuq51T63OpeWaipt
KrWOPyyt9NZ6qzn3Pn6jTW38yz/acq1THx+yVXsbn1d6z1vjf/P4wTw+YPx3
Gz86Pmj8Zh+fPD5x/MH4nVJqa3n8ZB0PsRQ+bHzQ+It1S5+ba9JTbT7z1M//
/T+++q53XPHbb/rib73ykWuv6uMx9An9oUsuu+Lcc7/wutd86ffffdf5+068
8EJt49H7pNcZH1bqMn5j1pfP4znHi9Txt4q+tI+v6nMaDzCPp9B/z3W8wtxT
GX99PMY8T+O3lzT+diuVjxv/pFLG74yPKl0P3HJK4316WXW+ro7/0pK2WntP
WpBlfHzV/48PGL87Pmn8erx81/OMrx2fo9XXA1b9/FjdubM6XavTkz61aWUK
b6BfajtSqVMef3n8vfGvrt/U1ybthFawpfEqWs0yNkp7MP53fD5fz2OMrdE3
zl073PUJLMNY/vHG46nHOo73K9qlmlM+8exzzz300HP33nX06ceqNqyXVI8+
+sih++46/MsDRw4/k9JqfMD4eN5HuzO+PY21mfXeTYs2dqVoebLWF8uTLWU9
k7468xpjLVLTeo+17PzM+NQ8PnP8pWF3Y1X1UY1N8Vtr2cp46LK0sfHj5/S7
44/HGmVWZax1Y/XHog1jnYdt63PGI1ZZc2VdZd1FX1RlFOPJWfZh7zZ0PbEW
s+r38zKzRVVP32TfOkCVx9ECj8fRL7Sa44sXHZaecpwCGZNWfljYMBzOTxtb
XjkaMghZSx9mOT53fE33rnEMJ+27zqjsadJpHdulTRo7pD2Vpafxg17dYRhl
LnnWs+lgcpyGeVX9HT32eAQZ4/jDMs2yE+3R2LRe+QT+VF/NnvJaWpXxfOOZ
xm7pz8avuw7P+Lg83kcLIJ/BmRl22GW946cw1GFm4+TXSevQ80rnXa8iV6PP
H882rEQWJ0MZOz0WbCw+R0o/OR545sl1YvWlXc9d+GNtrxZIxtv1N5e5Yykt
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
16OWf9V9DIJvPkmp9AKw4XE2kwlvZbGr+vyBhw/+7Md584Q8/EwfAfAnIoAS
vTvFE24SuJk6otC0k6AygwDGqYV6rbhNz61hMc0kO6z6yvbiEVF69Hv27L/k
nLOvf/cfHHvkcdPB636Hbg2ZrokJDgMVTHUHjind2Tm8PQsEvHghd9MoB5/I
IeboHaU6aKti0jyjqVNzvaI5g5ldu02RYjj4m+6iDoI59M0lMRPCcyTJzIsl
tvI9s4WcOfS0Ua42bsaQcgu63sMbn3vwwNVvf/PFZ7303iuudKVkcHTqbnLn
vijMVmKN7NnqKgnSZFJiNhhLNqdEj6t1KtXJenqSaj9l2//lZilfDU6adfLZ
Z6783bfvO23X/p27Hrn6mmZxhLUXMMptiZaC4pHnjI02NGB9S4Hfhi43Ohw6
a4bO+iovJ+267suVDODCYk4HNl4XZqCt4Y4n+/iEynIh5ntuEJdr1LUCDcZv
Du2eFaWhByGHm3vUm9UNzHVR+5vK/Rm6q6/jycP7L71k+449G6d96z3v3Tx6
BETEyOm8Zhqt2MuG6D3VC81cWUFRLmHv8okqDDg8vXmapstfn+e61RlGD8gC
6VKOPfXEF9/wuvNfvP2CnRsPXnQRk/SmHjPpW2iKCKxUTFzXYmWY1b5cdJbi
OQ01hZVV13Nj0ybKgy3XlXKnTmtn86t93XzRomrzfMVqAa31LFueKNE8W4co
IG1Ijsq+ucGBHEepltGs2UoBn6jZ3UCMOubqeUTEMtBffPZzl2zs2r+x85o3
v+344cM55HAW7QiycwFTnfOVmF8lw1gw+2nJHq5kRSl5YaBi5n3hPSbTo5vH
n7j5lvsvufipH/5omk4Ok1wdO3r9H/7RhaftvPSMlzz+ne80QJJjjz164Nov
H/jCVccfeYygnhPTRgVFOgQWX+DmHbc1hQImqtcKhhIyKYunAXJppmlTtxCr
djfx+ZoGLimbpYp2vWzRWKl1DYTY9Neq0yhxa8xlsRpkdoN8W5/vua0v+Wxk
y88feOieL15+4GvXnHzqcXush6/7+qU7XnLRjl3f/G9/Nm1qKEE6fvLp7/3w
gUsueeqWW1abJ7XH6r9Ls7UczGYDzUCyLatULyJarZE2Lmv6fY6Djuez7vqp
n9x25dnnXrx947JzXvqTf/50Onx4lFZ3nX/e3h27vvy2Nx1/6smRsD/13e98
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

                   "], {{0, 128}, {128, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 BaseStyle->"ImageGraphics",
                 ImageSizeRaw->{128, 128},
                 PlotRange->{{0, 128}, {0, 128}}], "]"}]}], "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"3", ",", 
                  RowBox[{"3", "-", "j"}], ",", "i"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", 
                  RowBox[{"3", "-", "j"}], ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", 
                  RowBox[{"4", "-", "j"}], ",", 
                  RowBox[{"i", "-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", 
                  RowBox[{"4", "-", "j"}], ",", "i"}], "}"}]}], "}"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "3"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xtrctSt", "=", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"ExtractSet", "[", 
         RowBox[{"StartSet", ",", "Tans"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", 
          RowBox[{"xtrctSt", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"keepp", ",", 
          RowBox[{"pic", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"xtrctSt", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"xtrctSt", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "i", ",", "2"}], "]"}], "]"}], ",", "1"}], 
            "]"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", 
          RowBox[{"xtrctSt", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"pic", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"xtrctSt", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"xtrctSt", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "i", ",", "2"}], "]"}], "]"}], ",", "1"}], 
           "]"}], "]"}], "=", 
         RowBox[{"keepp", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"pic", ",", 
        RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Exch", "[", "list_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"list", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"per", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"Exchi", "=", "1"}], ",", 
         RowBox[{"Exchi", "\[LessEqual]", 
          RowBox[{"Length", "[", 
           RowBox[{"list", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"Exchi", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "Exchi"}], "]"}], "]"}], "\[NotEqual]", " ", 
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "Exchi"}], "]"}], "]"}]}], ",", 
           RowBox[{"per", "=", 
            RowBox[{"per", "\[Union]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "Exchi"}], "]"}], "]"}], "\[Rule]", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "Exchi"}], "]"}], "]"}]}], "}"}]}]}]}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", "per"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\:53e6\:4e00\:4e2a\:6570\:636e\:96c6", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS1", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S1"}], "/.", "S1"}], "/.", "S1"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS2", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S2"}], "/.", "S2"}], "/.", "S2"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS3", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S3"}], "/.", "S3"}], "/.", "S3"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS4", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S4"}], "/.", "S4"}], "/.", "S4"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS5", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S5"}], "/.", "S5"}], "/.", "S5"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS6", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S6"}], "/.", "S6"}], "/.", "S6"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS7", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S7"}], "/.", "S7"}], "/.", "S7"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS8", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S8"}], "/.", "S8"}], "/.", "S8"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IS9", "=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{"StartSet", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S9"}], "/.", "S9"}], "/.", "S9"}]}], "}"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prmt", 
   RowBox[{"(*", "mypermutation", "*)"}], "=", 
   RowBox[{"{", 
    RowBox[{
    "S1", ",", "S2", ",", "S3", ",", "S4", ",", "S5", ",", "S6", ",", "S7", 
     ",", "S8", ",", "S9", ",", "IS1", ",", "IS2", ",", "IS3", ",", "IS4", 
     ",", "IS5", ",", "IS6", ",", "IS7", ",", "IS8", ",", "IS9"}], "}"}]}], 
  ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrmltMltply", "[", 
    RowBox[{"Srtst_", ",", "list1_", ",", "list2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Srtst", "/.", "list1"}], "/.", "list2"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrmltMltplExch", "[", "llset_", "]"}], ":=", 
   RowBox[{"Exch", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"llset", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"PrmltMltply", "[", 
       RowBox[{
        RowBox[{"llset", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"llset", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"llset", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{"TnsFrmMntn", "[", 
   RowBox[{"StartSet", ",", "Idntt"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Idntt", "=", "Fr1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", "=", "i"}], "}"}], ",", 
     RowBox[{"Button", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[LessEqual]", "9"}], ",", "i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"i", "-", "9"}], ")"}]}]}], "]"}], ",", 
       RowBox[{"Idntt", "=", 
        RowBox[{"PrmltMltplExch", "[", 
         RowBox[{"{", 
          RowBox[{"StartSet", ",", "Idntt", ",", 
           RowBox[{"prmt", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}]}], "]"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "18"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5525934958007812`*^9, 3.5525935144257812`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "11", ",", "12", ",", "13", ",", "14", ",", "17", ",", "21", ",", "34", 
    ",", "15", ",", "16", ",", "18", ",", "19", ",", "22", ",", "24", ",", 
    "23", ",", "26", ",", "27"}], "}"}], 
  "\:4e0d\:52a8"}], "\[IndentingNewLine]", 
 RowBox[{"S9", ";", "S4", ";", "S1", ";", "S5", ";", "S6", ";", "S8", ";", 
  "S7", ";", "S3", ";", "S2", ";", "Fr1", ";", "Tw1", ";", "Tl1", ";", "El1", 
  ";", "T1", ";", "N1", ";", "E1", ";", "Sv1", ";", "Sx1", ";", "F1", ";", 
  "F2", ";", "Sx2", ";", "F3", ";", "F4", ";"}]}], "Input",
 CellChangeTimes->{{3.5527299474248047`*^9, 3.5527299476347656`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"11", "\[Rule]", "17"}], ",", 
     RowBox[{"17", "\[Rule]", "19"}], ",", 
     RowBox[{"19", "\[Rule]", "13"}], ",", 
     RowBox[{"13", "\[Rule]", "11"}], ",", 
     RowBox[{"14", "\[Rule]", "18"}], ",", 
     RowBox[{"18", "\[Rule]", "16"}], ",", 
     RowBox[{"16", "\[Rule]", "12"}], ",", 
     RowBox[{"12", "\[Rule]", "14"}], ",", 
     RowBox[{"31", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "31"}], ",", 
     RowBox[{"33", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "41"}], ",", 
     RowBox[{"41", "\[Rule]", "51"}], ",", 
     RowBox[{"51", "\[Rule]", "33"}], ",", 
     RowBox[{"32", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "42"}], ",", 
     RowBox[{"42", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "32"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"34", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "34"}], ",", 
     RowBox[{"35", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "35"}], ",", 
     RowBox[{"36", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "54"}], ",", 
     RowBox[{"54", "\[Rule]", "36"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"21", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "21"}], ",", 
     RowBox[{"24", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "24"}], ",", 
     RowBox[{"37", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "37"}], ",", 
     RowBox[{"39", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "39"}], ",", 
     RowBox[{"38", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "38"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"51", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "51"}], ",", 
     RowBox[{"54", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "54"}], ",", 
     RowBox[{"11", "\[Rule]", "31"}], ",", 
     RowBox[{"31", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "11"}], ",", 
     RowBox[{"17", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "21"}], ",", 
     RowBox[{"21", "\[Rule]", "41"}], ",", 
     RowBox[{"41", "\[Rule]", "17"}], ",", 
     RowBox[{"14", "\[Rule]", "34"}], ",", 
     RowBox[{"34", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "14"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"12", "\[Rule]", "32"}], ",", 
     RowBox[{"32", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "12"}], ",", 
     RowBox[{"18", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "42"}], ",", 
     RowBox[{"42", "\[Rule]", "18"}], ",", 
     RowBox[{"15", "\[Rule]", "35"}], ",", 
     RowBox[{"35", "\[Rule]", "25"}], ",", 
     RowBox[{"25", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "15"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"61", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "61"}], ",", 
     RowBox[{"64", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "64"}], ",", 
     RowBox[{"13", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "13"}], ",", 
     RowBox[{"19", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "19"}], ",", 
     RowBox[{"16", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "16"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"31", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "31"}], ",", 
     RowBox[{"32", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "34"}], ",", 
     RowBox[{"34", "\[Rule]", "32"}], ",", 
     RowBox[{"17", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "17"}], ",", 
     RowBox[{"19", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "51"}], ",", 
     RowBox[{"51", "\[Rule]", "19"}], ",", 
     RowBox[{"18", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "54"}], ",", 
     RowBox[{"54", "\[Rule]", "18"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"14", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "14"}], ",", 
     RowBox[{"16", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "16"}], ",", 
     RowBox[{"15", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "25"}], ",", 
     RowBox[{"25", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "15"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"S9", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"41", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "41"}], ",", 
     RowBox[{"42", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "42"}], ",", 
     RowBox[{"11", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "11"}], ",", 
     RowBox[{"13", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "21"}], ",", 
     RowBox[{"21", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "13"}], ",", 
     RowBox[{"12", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "12"}]}], "}"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{"Fr1", ";", "Tw1", ";", "Tl1", ";", "El1", ";", "T1", ";", "N1", ";",
   "E1", ";", "Sv1", ";", "Sx1", ";", "F1", ";", "F2", ";", "Sx2", ";", "F3", 
  ";", "F4", ";"}], "\[IndentingNewLine]", 
 RowBox[{"15", ",", "16", ",", "18", ",", "19", ",", "22", ",", "24", ",", 
  "23", ",", "26", ",", "27"}]}], "Input",
 CellChangeTimes->{{3.5527299769208984`*^9, 3.5527299797773438`*^9}, {
  3.5527300255546875`*^9, 3.5527300346914062`*^9}, {3.552730116836914*^9, 
  3.5527301183164062`*^9}, {3.5527302034716797`*^9, 3.5527302450722656`*^9}}],

Cell[BoxData[{"11", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S9", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"41", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "41"}], ",", 
     RowBox[{"42", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "42"}], ",", 
     RowBox[{"11", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "11"}], ",", 
     RowBox[{"13", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "21"}], ",", 
     RowBox[{"21", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "13"}], ",", 
     RowBox[{"12", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "12"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"51", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "51"}], ",", 
     RowBox[{"54", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "54"}], ",", 
     RowBox[{"11", "\[Rule]", "31"}], ",", 
     RowBox[{"31", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "11"}], ",", 
     RowBox[{"17", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "21"}], ",", 
     RowBox[{"21", "\[Rule]", "41"}], ",", 
     RowBox[{"41", "\[Rule]", "17"}], ",", 
     RowBox[{"14", "\[Rule]", "34"}], ",", 
     RowBox[{"34", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "14"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"11", "\[Rule]", "17"}], ",", 
     RowBox[{"17", "\[Rule]", "19"}], ",", 
     RowBox[{"19", "\[Rule]", "13"}], ",", 
     RowBox[{"13", "\[Rule]", "11"}], ",", 
     RowBox[{"14", "\[Rule]", "18"}], ",", 
     RowBox[{"18", "\[Rule]", "16"}], ",", 
     RowBox[{"16", "\[Rule]", "12"}], ",", 
     RowBox[{"12", "\[Rule]", "14"}], ",", 
     RowBox[{"31", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "53"}], ",", 
     RowBox[{"53", "\[Rule]", "31"}], ",", 
     RowBox[{"33", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "41"}], ",", 
     RowBox[{"41", "\[Rule]", "51"}], ",", 
     RowBox[{"51", "\[Rule]", "33"}], ",", 
     RowBox[{"32", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "42"}], ",", 
     RowBox[{"42", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "32"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "12", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"12", "\[Rule]", "32"}], ",", 
     RowBox[{"32", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "12"}], ",", 
     RowBox[{"18", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "42"}], ",", 
     RowBox[{"42", "\[Rule]", "18"}], ",", 
     RowBox[{"15", "\[Rule]", "35"}], ",", 
     RowBox[{"35", "\[Rule]", "25"}], ",", 
     RowBox[{"25", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "15"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "13", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"61", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "63"}], ",", 
     RowBox[{"63", "\[Rule]", "61"}], ",", 
     RowBox[{"64", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "64"}], ",", 
     RowBox[{"13", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "13"}], ",", 
     RowBox[{"19", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "43"}], ",", 
     RowBox[{"43", "\[Rule]", "19"}], ",", 
     RowBox[{"16", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "16"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "14", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"14", "\[Rule]", "62"}], ",", 
     RowBox[{"62", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "14"}], ",", 
     RowBox[{"16", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "24"}], ",", 
     RowBox[{"24", "\[Rule]", "52"}], ",", 
     RowBox[{"52", "\[Rule]", "16"}], ",", 
     RowBox[{"15", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "25"}], ",", 
     RowBox[{"25", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "15"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "17", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"31", "\[Rule]", "33"}], ",", 
     RowBox[{"33", "\[Rule]", "39"}], ",", 
     RowBox[{"39", "\[Rule]", "37"}], ",", 
     RowBox[{"37", "\[Rule]", "31"}], ",", 
     RowBox[{"32", "\[Rule]", "36"}], ",", 
     RowBox[{"36", "\[Rule]", "38"}], ",", 
     RowBox[{"38", "\[Rule]", "34"}], ",", 
     RowBox[{"34", "\[Rule]", "32"}], ",", 
     RowBox[{"17", "\[Rule]", "61"}], ",", 
     RowBox[{"61", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "17"}], ",", 
     RowBox[{"19", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "51"}], ",", 
     RowBox[{"51", "\[Rule]", "19"}], ",", 
     RowBox[{"18", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "54"}], ",", 
     RowBox[{"54", "\[Rule]", "18"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "21", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"21", "\[Rule]", "27"}], ",", 
     RowBox[{"27", "\[Rule]", "29"}], ",", 
     RowBox[{"29", "\[Rule]", "23"}], ",", 
     RowBox[{"23", "\[Rule]", "21"}], ",", 
     RowBox[{"24", "\[Rule]", "28"}], ",", 
     RowBox[{"28", "\[Rule]", "26"}], ",", 
     RowBox[{"26", "\[Rule]", "22"}], ",", 
     RowBox[{"22", "\[Rule]", "24"}], ",", 
     RowBox[{"37", "\[Rule]", "67"}], ",", 
     RowBox[{"67", "\[Rule]", "49"}], ",", 
     RowBox[{"49", "\[Rule]", "59"}], ",", 
     RowBox[{"59", "\[Rule]", "37"}], ",", 
     RowBox[{"39", "\[Rule]", "69"}], ",", 
     RowBox[{"69", "\[Rule]", "47"}], ",", 
     RowBox[{"47", "\[Rule]", "57"}], ",", 
     RowBox[{"57", "\[Rule]", "39"}], ",", 
     RowBox[{"38", "\[Rule]", "68"}], ",", 
     RowBox[{"68", "\[Rule]", "48"}], ",", 
     RowBox[{"48", "\[Rule]", "58"}], ",", 
     RowBox[{"58", "\[Rule]", "38"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "34", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"34", "\[Rule]", "64"}], ",", 
     RowBox[{"64", "\[Rule]", "46"}], ",", 
     RowBox[{"46", "\[Rule]", "56"}], ",", 
     RowBox[{"56", "\[Rule]", "34"}], ",", 
     RowBox[{"35", "\[Rule]", "65"}], ",", 
     RowBox[{"65", "\[Rule]", "45"}], ",", 
     RowBox[{"45", "\[Rule]", "55"}], ",", 
     RowBox[{"55", "\[Rule]", "35"}], ",", 
     RowBox[{"36", "\[Rule]", "66"}], ",", 
     RowBox[{"66", "\[Rule]", "44"}], ",", 
     RowBox[{"44", "\[Rule]", "54"}], ",", 
     RowBox[{"54", "\[Rule]", "36"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "15", "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5527299922197266`*^9, 3.552730029798828*^9}, {
  3.552730101845703*^9, 3.552730190671875*^9}, {3.5527302377773438`*^9, 
  3.5527302389365234`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PermulateMultiply", "[", 
    RowBox[{"Srtst_", ",", "List_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cntr", "=", "Srtst"}], ",", 
       RowBox[{"ndSt", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "List", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"Cntr", "=", 
         RowBox[{"Cntr", "/.", 
          RowBox[{"prmt", "[", 
           RowBox[{"[", 
            RowBox[{"List", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}]}], "]"}], ";", 
      RowBox[{"ndSt", "=", 
       RowBox[{"Exch", "[", 
        RowBox[{"{", 
         RowBox[{"Srtst", ",", "Cntr"}], "}"}], "]"}]}]}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Srtst", ":", "StartSet"}], ",", " ", 
    RowBox[{"List", ":", " ", 
     RowBox[{"AntTrace", "[", "...", "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.552732517654297*^9, 3.5527325196708984`*^9}, 
   3.552732797743164*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "12", ",", "13", ",", "14", ",", "17", ",", "21", ",", "34", 
     ",", "15"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.552732650392578*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PermulateMultiply", "[", 
  RowBox[{"list", ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.552732655904297*^9, 3.5527326628164062`*^9}, {
  3.552732746491211*^9, 3.552732755890625*^9}, {3.552732802963867*^9, 
  3.552732803828125*^9}, {3.5527328689335938`*^9, 3.5527328690771484`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"11", "\[Rule]", "17"}], ",", 
   RowBox[{"12", "\[Rule]", "14"}], ",", 
   RowBox[{"13", "\[Rule]", "11"}], ",", 
   RowBox[{"14", "\[Rule]", "18"}], ",", 
   RowBox[{"17", "\[Rule]", "19"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5527326632041016`*^9, 3.5527326889296875`*^9}, {
  3.5527327405009766`*^9, 3.5527327566748047`*^9}, {3.5527328004990234`*^9, 
  3.5527328047197266`*^9}, {3.552732862470703*^9, 3.5527328695302734`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "===", 
  RowBox[{"(", 
   RowBox[{"list", "/.", 
    RowBox[{"PermulateMultiply", "[", 
     RowBox[{"list", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.55273289671875*^9, 3.5527329072460938`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.5527328869902344`*^9, 3.5527329080458984`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "9"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.552732589239258*^9, 3.552732592814453*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "9", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.552732586307617*^9, 3.5527325930742188`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"times", "=", 
   RowBox[{"AbsoluteTime", "[", 
    RowBox[{"DateList", "[", "]"}], "]"}]}], ";", 
  RowBox[{"Clear", "[", "list", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "12", ",", "13", ",", "14", ",", "17", ",", "21", ",", "34", 
     ",", "15"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateList", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AbsoluteTime", "[", 
      RowBox[{"DateList", "[", "]"}], "]"}], "-", "times"}], "\[LessEqual]", 
    "60"}], ",", 
   RowBox[{
    RowBox[{"intlist", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}], ",", "9"}], "]"}]}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"list", "===", 
       RowBox[{"{", 
        RowBox[{"list", "/.", 
         RowBox[{"PermulateMultiply", "[", 
          RowBox[{"list", ",", "intlist"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"Print", "[", "intlist", "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DateList", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.5527321906816406`*^9, 3.552732229544922*^9}, {
   3.552732263203125*^9, 3.552732329251953*^9}, {3.5527325368085938`*^9, 
   3.5527326384433594`*^9}, {3.552732877408203*^9, 3.5527328795126953`*^9}, {
   3.552732912569336*^9, 3.5527329440185547`*^9}, 3.5527330436689453`*^9, {
   3.5527331193828125`*^9, 3.552733167895508*^9}, {3.5527332397128906`*^9, 
   3.55273326825*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2012", ",", "7", ",", "31", ",", "22", ",", "20", ",", 
   "40.5595703`9.360668225365124"}], "}"}]], "Output",
 CellChangeTimes->{{3.5527329216220703`*^9, 3.552732944439453*^9}, {
   3.5527330170429688`*^9, 3.552733043970703*^9}, 3.5527331196845703`*^9, 
   3.5527331746396484`*^9, 3.552733240576172*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2012", ",", "7", ",", "31", ",", "22", ",", "21", ",", 
   "40.5605468`9.36067868118242"}], "}"}]], "Output",
 CellChangeTimes->{{3.5527329216220703`*^9, 3.552732944439453*^9}, {
   3.5527330170429688`*^9, 3.552733043970703*^9}, 3.5527331196845703`*^9, 
   3.5527331746396484`*^9, 3.5527333005625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sll", "=", 
  RowBox[{"Exch", "[", 
   RowBox[{"{", 
    RowBox[{"StartSet", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"StartSet", "/.", "S8"}], "/.", "S2"}], "/.", "S5"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5527298527304688`*^9, 3.5527299040634766`*^9}, {
  3.552730445165039*^9, 3.5527304694697266`*^9}, {3.5527306337373047`*^9, 
  3.5527306578095703`*^9}, {3.5527308649277344`*^9, 3.552730876350586*^9}, {
  3.5527309080322266`*^9, 3.5527309484726562`*^9}, {3.552731102583008*^9, 
  3.5527311118447266`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"12", "\[Rule]", "32"}], ",", 
   RowBox[{"14", "\[Rule]", "62"}], ",", 
   RowBox[{"16", "\[Rule]", "68"}], ",", 
   RowBox[{"18", "\[Rule]", "38"}], ",", 
   RowBox[{"22", "\[Rule]", "42"}], ",", 
   RowBox[{"24", "\[Rule]", "52"}], ",", 
   RowBox[{"26", "\[Rule]", "58"}], ",", 
   RowBox[{"28", "\[Rule]", "48"}], ",", 
   RowBox[{"32", "\[Rule]", "28"}], ",", 
   RowBox[{"34", "\[Rule]", "64"}], ",", 
   RowBox[{"35", "\[Rule]", "65"}], ",", 
   RowBox[{"36", "\[Rule]", "66"}], ",", 
   RowBox[{"38", "\[Rule]", "22"}], ",", 
   RowBox[{"42", "\[Rule]", "18"}], ",", 
   RowBox[{"44", "\[Rule]", "54"}], ",", 
   RowBox[{"45", "\[Rule]", "55"}], ",", 
   RowBox[{"46", "\[Rule]", "56"}], ",", 
   RowBox[{"48", "\[Rule]", "12"}], ",", 
   RowBox[{"52", "\[Rule]", "16"}], ",", 
   RowBox[{"54", "\[Rule]", "36"}], ",", 
   RowBox[{"55", "\[Rule]", "35"}], ",", 
   RowBox[{"56", "\[Rule]", "34"}], ",", 
   RowBox[{"58", "\[Rule]", "14"}], ",", 
   RowBox[{"62", "\[Rule]", "26"}], ",", 
   RowBox[{"64", "\[Rule]", "46"}], ",", 
   RowBox[{"65", "\[Rule]", "45"}], ",", 
   RowBox[{"66", "\[Rule]", "44"}], ",", 
   RowBox[{"68", "\[Rule]", "24"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5527298747158203`*^9, 3.5527299048222656`*^9, {3.5527304574384766`*^9, 
   3.552730470319336*^9}, {3.552730634432617*^9, 3.552730659216797*^9}, 
   3.552730877248047*^9, {3.5527309113251953`*^9, 3.55273094921875*^9}, 
   3.5527311124589844`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sll1", "=", 
  RowBox[{"Exch", "[", 
   RowBox[{"{", 
    RowBox[{"StartSet", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StartSet", "/.", "S5"}], "/.", "S2"}], "/.", "S8"}], "/.", 
       "S8"}], "/.", "S8"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sll2", "=", 
  RowBox[{"Exch", "[", 
   RowBox[{"{", 
    RowBox[{"StartSet", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StartSet", "/.", "S5"}], "/.", "S2"}], "/.", "S2"}], "/.", 
      "S5"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.552731538501953*^9, 3.5527315702490234`*^9}, 
   3.5527316008027344`*^9, {3.5527316566816406`*^9, 3.552731728459961*^9}, {
   3.552731892015625*^9, 3.5527319010878906`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"12", "\[Rule]", "32"}], ",", 
   RowBox[{"14", "\[Rule]", "58"}], ",", 
   RowBox[{"16", "\[Rule]", "52"}], ",", 
   RowBox[{"18", "\[Rule]", "38"}], ",", 
   RowBox[{"22", "\[Rule]", "42"}], ",", 
   RowBox[{"24", "\[Rule]", "68"}], ",", 
   RowBox[{"26", "\[Rule]", "62"}], ",", 
   RowBox[{"28", "\[Rule]", "48"}], ",", 
   RowBox[{"32", "\[Rule]", "28"}], ",", 
   RowBox[{"34", "\[Rule]", "64"}], ",", 
   RowBox[{"35", "\[Rule]", "65"}], ",", 
   RowBox[{"36", "\[Rule]", "66"}], ",", 
   RowBox[{"38", "\[Rule]", "22"}], ",", 
   RowBox[{"42", "\[Rule]", "18"}], ",", 
   RowBox[{"44", "\[Rule]", "54"}], ",", 
   RowBox[{"45", "\[Rule]", "55"}], ",", 
   RowBox[{"46", "\[Rule]", "56"}], ",", 
   RowBox[{"48", "\[Rule]", "12"}], ",", 
   RowBox[{"52", "\[Rule]", "24"}], ",", 
   RowBox[{"54", "\[Rule]", "36"}], ",", 
   RowBox[{"55", "\[Rule]", "35"}], ",", 
   RowBox[{"56", "\[Rule]", "34"}], ",", 
   RowBox[{"58", "\[Rule]", "26"}], ",", 
   RowBox[{"62", "\[Rule]", "14"}], ",", 
   RowBox[{"64", "\[Rule]", "46"}], ",", 
   RowBox[{"65", "\[Rule]", "45"}], ",", 
   RowBox[{"66", "\[Rule]", "44"}], ",", 
   RowBox[{"68", "\[Rule]", "16"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.552731601673828*^9, {3.552731657470703*^9, 3.5527316791396484`*^9}, {
   3.552731711205078*^9, 3.5527317287216797`*^9}, {3.5527318568564453`*^9, 
   3.552731901748047*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"12", "\[Rule]", "28"}], ",", 
   RowBox[{"18", "\[Rule]", "22"}], ",", 
   RowBox[{"22", "\[Rule]", "18"}], ",", 
   RowBox[{"28", "\[Rule]", "12"}], ",", 
   RowBox[{"32", "\[Rule]", "48"}], ",", 
   RowBox[{"34", "\[Rule]", "46"}], ",", 
   RowBox[{"35", "\[Rule]", "45"}], ",", 
   RowBox[{"36", "\[Rule]", "44"}], ",", 
   RowBox[{"38", "\[Rule]", "42"}], ",", 
   RowBox[{"42", "\[Rule]", "38"}], ",", 
   RowBox[{"44", "\[Rule]", "36"}], ",", 
   RowBox[{"45", "\[Rule]", "35"}], ",", 
   RowBox[{"46", "\[Rule]", "34"}], ",", 
   RowBox[{"48", "\[Rule]", "32"}], ",", 
   RowBox[{"54", "\[Rule]", "66"}], ",", 
   RowBox[{"55", "\[Rule]", "65"}], ",", 
   RowBox[{"56", "\[Rule]", "64"}], ",", 
   RowBox[{"64", "\[Rule]", "56"}], ",", 
   RowBox[{"65", "\[Rule]", "55"}], ",", 
   RowBox[{"66", "\[Rule]", "54"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.552731601673828*^9, {3.552731657470703*^9, 3.5527316791396484`*^9}, {
   3.552731711205078*^9, 3.5527317287216797`*^9}, {3.5527318568564453`*^9, 
   3.552731901751953*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exch", "[", 
  RowBox[{"{", 
   RowBox[{"StartSet", ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StartSet", "/.", "S5"}], "/.", "S2"}], "/.", "S2"}], "/.", 
       "S5"}], "/.", "Sll1"}], "/.", "Sll1"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.552731939192383*^9, 3.5527319736083984`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"14", "\[Rule]", "26"}], ",", 
   RowBox[{"16", "\[Rule]", "24"}], ",", 
   RowBox[{"24", "\[Rule]", "16"}], ",", 
   RowBox[{"26", "\[Rule]", "14"}], ",", 
   RowBox[{"52", "\[Rule]", "68"}], ",", 
   RowBox[{"58", "\[Rule]", "62"}], ",", 
   RowBox[{"62", "\[Rule]", "58"}], ",", 
   RowBox[{"68", "\[Rule]", "52"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5527319492978516`*^9, 3.552731974392578*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"TreePlot", "[", 
    RowBox[{
     RowBox[{"Sl5", "\[Union]", "Sl8", "\[Union]", "Sl2"}], ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sl1", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sl2", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sl3", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sl4", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sl6", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sl7", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sl9", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TreePlot", "[", 
    RowBox[{"Sll", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"VertexLabeling", " ", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.5527303303632812`*^9, 3.5527303442822266`*^9}, {
  3.5527303919472656`*^9, 3.552730392939453*^9}, {3.5527306617539062`*^9, 
  3.552730683571289*^9}, {3.5527309797148438`*^9, 3.552731043461914*^9}, {
  3.5527310756972656`*^9, 3.552731079232422*^9}, {3.5527311318623047`*^9, 
  3.5527311374833984`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbNFM6ilS8zhxZ8PEYcufdp/sff1UzV7CQeWkx2v
t227sv+iZcOEGSKscPnqN8w77tZywOXnHOpxdxa9YH/lLnf/+l0b9y/gmyvL
Pvnsfp3/mbPz6j/un7dEV7tT95X9Fn9xo5/TP+1nhOizj6nObFW24TmgoX9Z
uIDhhT2HWJLZzEzWA06lb3dfvsroAJN/o174WMKe1QEmP+3WF664FRxweZj6
iAKLV2Htggeg7oSbD7MPJr/MXuCxR81V+4j5HQKym/7vP6vurLCjkcnhZZzX
tFVpj/ZfDa5Yz5P93/7BmtfljOf+7Ved335f6Tk3Inyg4XHicX31a2uGA2rp
aytPfpaEy8PCEya/+YWJb0aXAFye49C3B1z2QvDwg8nD3AuTh/k3dvaOkrWf
heHyMPUw/8DkYebD5GH2AwCdYfSQ
      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.020897862589478393`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{2, 21}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{4, 19}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{5, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{6, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{7, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{7, 17}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{8, 9}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{9, 14}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{12, 13}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{13, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{14, 15}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{15, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{16, 17}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{16, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{17, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{17, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{18, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{18, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{19, 20}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S8\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{20, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{21, 22}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S5\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{22, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{23, 24}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{24, 29}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{25, 26}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{26, 27}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{27, 28}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{28, 25}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{29, 30}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.020897862589478393`, 0.8}}], 
         ArrowBox[{30, 23}]}}, {InsetBox[
         FrameBox["12",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["32",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["14",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["62",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["15",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["35",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["65",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["16",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["68",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["18",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["38",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["22",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["42",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["24",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["52",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["25",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["45",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["55",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["26",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["58",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20], InsetBox[
         FrameBox["28",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 21], InsetBox[
         FrameBox["48",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 22], InsetBox[
         FrameBox["34",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 23], InsetBox[
         FrameBox["64",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 24], InsetBox[
         FrameBox["36",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 25], InsetBox[
         FrameBox["66",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 26], InsetBox[
         FrameBox["44",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 27], InsetBox[
         FrameBox["54",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 28], InsetBox[
         FrameBox["46",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 29], InsetBox[
         FrameBox["56",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 30]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbNFM6ilS8zhxZ8PEYcufdp/sff1UzV7CQeWkx2v
t227sv+iZcOEGSKscPnqN8w77tZywOU3KvBvPlj7yZ4BymeC0PZivgxiZdJv
9otDaDifESofU53ZqmzDc0BD/7JwAcMLew6xJLOZmawHnErf7r58ldEBJv9G
vfCxhD2rA0x+2q0vXHErOODyMPURBRavwtoFD0DdCTcfZh9MHua+a1Jy0Sfe
ftsPpeHuU+K3WX317H84X3V++32l59yI8IGGx4nH9dWvrRkOqKWvrTz5WRIu
DwtPmPzmFya+GV0CcHmOQ98ecNkLwcMPJg9zL0we5t/Y2TtK1n4WhsvD1MP8
A5OHmQ+Th9kPAGLd718=
       "]]& ],
    AspectRatio->0.8114045696594042,
    FrameTicks->None,
    ImagePadding->{{0., 1.}, {1., 0.}},
    ImageSize->{640., Automatic},
    PlotRange->{{-0.44690064562354576`, 
     7.258625910385143}, {-4.889481926827288, 0.18366242522822862`}},
    PlotRangePadding->Automatic], ",", 
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.025402555127622194`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{2, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{4, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{7, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{8, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{9, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{12, 9}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{13, 14}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{14, 15}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{15, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{16, 13}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{17, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{18, 19}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{19, 20}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S1\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{20, 17}]}}, {InsetBox[
         FrameBox["11",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["17",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["19",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["13",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["14",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["18",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["16",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["12",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["31",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["61",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["43",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["53",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["33",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["63",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["41",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["51",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["32",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["62",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["42",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["52",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
       "]]& ],
    AspectRatio->1.0273995157577072`,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{3.304661103511961, -1.1726139399558573`}, {
      3.731062536223182, -0.31981107453341573`}, {
      4.157463968934403, -1.1726139399558573`}, {
      3.304661103511961, -2.025416805378299}, {
      0.31981107453341556`, -1.1726139399558573`}, {
      0.7462125072446364, -0.31981107453341573`}, {
      1.1726139399558573`, -1.1726139399558573`}, {
      0.31981107453341556`, -2.025416805378299}, {
      1.8122360890226883`, -1.1726139399558573`}, {
      2.238637521733909, -0.31981107453341573`}, {
      2.66503895444513, -1.1726139399558573`}, {
      1.8122360890226883`, -2.025416805378299}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.026024509117570253`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{2, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{4, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{7, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{8, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{9, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S2\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.026024509117570253`, 0.8}}], 
         ArrowBox[{12, 9}]}}, {InsetBox[
         FrameBox["34",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["64",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["46",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["56",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["35",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["65",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["45",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["55",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["36",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["66",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["44",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["54",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{3.304661103511961, -1.1726139399558573`}, {
       3.731062536223182, -0.31981107453341573`}, {
       4.157463968934403, -1.1726139399558573`}, {
       3.304661103511961, -2.025416805378299}, {
       0.31981107453341556`, -1.1726139399558573`}, {
       0.7462125072446364, -0.31981107453341573`}, {
       1.1726139399558573`, -1.1726139399558573`}, {
       0.31981107453341556`, -2.025416805378299}, {
       1.8122360890226883`, -1.1726139399558573`}, {
       2.238637521733909, -0.31981107453341573`}, {
       2.66503895444513, -1.1726139399558573`}, {
       1.8122360890226883`, -2.025416805378299}}]& ],
    AspectRatio->0.6666631923117826,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.025402555127622194`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{2, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{4, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{7, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{8, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{9, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{12, 9}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{13, 14}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{14, 15}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{15, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{16, 13}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{17, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{18, 19}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{19, 20}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S3\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{20, 17}]}}, {InsetBox[
         FrameBox["21",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["27",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["29",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["23",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["24",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["28",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["26",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["22",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["37",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["67",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["49",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["59",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["39",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["69",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["47",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["57",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["38",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["68",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["48",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["58",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
       "]]& ],
    AspectRatio->1.0273995157577072`,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.025402555127622194`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{2, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{4, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{7, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{8, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{9, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{12, 9}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{13, 14}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{14, 15}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{15, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{16, 13}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{17, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{18, 19}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{19, 20}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S4\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{20, 17}]}}, {InsetBox[
         FrameBox["51",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["57",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["59",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["53",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["54",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["58",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["56",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["52",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["11",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["31",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["27",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["47",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["17",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["37",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["21",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["41",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["14",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["34",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["24",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["44",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
       "]]& ],
    AspectRatio->1.0273995157577072`,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.025402555127622194`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{2, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{4, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{7, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{8, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{9, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{12, 9}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{13, 14}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{14, 15}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{15, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{16, 13}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{17, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{18, 19}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{19, 20}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S6\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{20, 17}]}}, {InsetBox[
         FrameBox["61",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["67",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["69",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["63",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["64",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["68",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["66",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["62",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["13",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["33",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["29",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["49",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["19",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["39",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["23",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["43",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["16",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["36",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["26",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["46",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
       "]]& ],
    AspectRatio->1.0273995157577072`,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.025402555127622194`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{2, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{4, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{7, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{8, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{9, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{12, 9}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{13, 14}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{14, 15}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{15, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{16, 13}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{17, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{18, 19}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{19, 20}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S7\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{20, 17}]}}, {InsetBox[
         FrameBox["31",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["33",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["39",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["37",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["32",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["36",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["38",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["34",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["17",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["61",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["29",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["57",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["19",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["67",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["27",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["51",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["18",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["64",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["28",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["54",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
       "]]& ],
    AspectRatio->1.0273995157577072`,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.025402555127622194`, 0.7}}], 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{1, 2}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{2, 3}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{3, 4}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{4, 1}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{5, 6}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{6, 7}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{7, 8}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{8, 5}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{9, 10}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{10, 11}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{11, 12}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{12, 9}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{13, 14}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{14, 15}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{15, 16}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{16, 13}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{17, 18}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{18, 19}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{19, 20}]}, 
        {Arrowheads[{{0.5, 0.5, 
            GraphicsBox[{
              GrayLevel[0], 
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox["\"S9\"", StripOnInput -> False], 
                 TraditionalForm]], {0, 0}, 
               ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
               GrayLevel[1]]}]}, {0.025402555127622194`, 0.8}}], 
         ArrowBox[{20, 17}]}}, {InsetBox[
         FrameBox["41",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["43",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["49",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["47",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["42",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["46",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["48",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["44",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["11",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["63",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["23",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["59",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["13",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["69",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["21",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["53",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["12",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["66",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["22",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["56",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW/H6aeby1kclqxoc+hS4TnQke3P+/MBu0OAc/3H
/4GsB4zkLpvYeXHD5WHq/7Add++qFjxw0LHx3onyK/YS0uuvsh3+tB+i/7n9
EYj4fqg4XB6m/sGnezt5TRgO/Nj93uX1vz9w+WUTfp/c9YLRAaYf6g4HmDxM
PUz/gcnymp/yueDyWW6LA8xv8sL1d9UI29gtFIDLw9TD9MPcg+r/5/Yw/8Pc
D5OHqYf5HwAKY6hY
       "]]& ],
    AspectRatio->1.0273995157577072`,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQfWjJ43BzA2EHCen1V9kOf9ovXrf09c0nIg5HHBvv
nSi/sv8ghLaHyXdk+/P+fPDcHib/Y/d7l9f//sDll034fXLXC0a4/gOT5TU/
5XPBzc9yWxxgfpMXLt9VI2xjt1AALg9T/+DTvZ28JgwHApzrP/4PZIXLw+yD
yUPF4fbD3AuTzwlPr6+ZKQbXD/MvTB6mfsmKNocuFZ4DMP9B7T0Asw8mD/Mf
TB7mXpg8zH8weZj/YPIw9X/Yjrt3VQvC/QeTh9kHk4f5DyYPcy9MHgBk5ukO

      "], {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.02238446171970002, 0.7}}], 
        ArrowBox[{1, 2}], ArrowBox[{2, 15}], ArrowBox[{3, 4}], 
        ArrowBox[{4, 13}], ArrowBox[{5, 6}], ArrowBox[{6, 11}], 
        ArrowBox[{7, 8}], ArrowBox[{8, 9}], ArrowBox[{9, 10}], 
        ArrowBox[{10, 7}], ArrowBox[{11, 12}], ArrowBox[{12, 5}], 
        ArrowBox[{13, 14}], ArrowBox[{14, 3}], ArrowBox[{15, 16}], 
        ArrowBox[{16, 1}], ArrowBox[{17, 18}], ArrowBox[{18, 27}], 
        ArrowBox[{19, 20}], ArrowBox[{20, 25}], ArrowBox[{21, 22}], 
        ArrowBox[{22, 23}], ArrowBox[{23, 24}], ArrowBox[{24, 21}], 
        ArrowBox[{25, 26}], ArrowBox[{26, 19}], ArrowBox[{27, 28}], 
        ArrowBox[{28, 17}]}, {InsetBox[
         FrameBox["12",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["32",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["14",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["62",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["16",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["68",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["18",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["38",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["22",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["42",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["24",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["52",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12], InsetBox[
         FrameBox["26",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 13], InsetBox[
         FrameBox["58",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 14], InsetBox[
         FrameBox["28",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 15], InsetBox[
         FrameBox["48",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 16], InsetBox[
         FrameBox["34",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 17], InsetBox[
         FrameBox["64",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 18], InsetBox[
         FrameBox["35",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 19], InsetBox[
         FrameBox["65",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 20], InsetBox[
         FrameBox["36",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 21], InsetBox[
         FrameBox["66",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 22], InsetBox[
         FrameBox["44",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 23], InsetBox[
         FrameBox["54",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 24], InsetBox[
         FrameBox["45",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 25], InsetBox[
         FrameBox["55",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 26], InsetBox[
         FrameBox["46",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 27], InsetBox[
         FrameBox["56",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 28]}}],
     Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGCQAWIQfWjJ43BzA2EHCen1V9kOf9ovXrf09c0nIg5HHBvv
nSi/sv8ghLaHyXdk+/P+fPDcHib/Y/d7l9f//sDll034fXLXC0a4/gOT5TU/
5XPBzc9yWxxgfpMXLt9VI2xjt1AALg9T/+DTvZ28JgwHApzrP/4PZIXLw+yD
yUPF4fbD3AuTzwlPr6+ZKQbXD/MvTB6mfsmKNocuFZ4DMP9B7T0Asw8mD/Mf
TB7mXpg8zH8weZj/YPIw9X/Yjrt3VQvC/QeTh9kHk4f5DyYPcy9MHgBk5ukO

       "]]& ],
    AspectRatio->0.8717770340335472,
    FrameTicks->None,
    ImageSize->400,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]]}], "}"}]], "Input",
 CellChangeTimes->{{3.5527314956054688`*^9, 3.5527315255253906`*^9}, {
  3.5527315864941406`*^9, 3.552731590743164*^9}}]
},
WindowToolbars->"EditBar",
WindowSize->{1424, 765},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 336, 8, 30, "Input"],
Cell[896, 30, 1779, 47, 92, "Input"],
Cell[2678, 79, 329, 7, 31, "Input"],
Cell[3010, 88, 1607, 39, 132, "Input"],
Cell[4620, 129, 707, 11, 31, "Input"],
Cell[5330, 142, 10812, 252, 512, "Input"],
Cell[16145, 396, 141, 3, 31, "Input"],
Cell[16289, 401, 307, 6, 72, "Input"],
Cell[16599, 409, 17803, 516, 372, "Input"],
Cell[34405, 927, 426, 6, 31, "Input"],
Cell[34834, 935, 1018, 19, 52, "Input"],
Cell[35855, 956, 8345, 205, 232, "Input"],
Cell[44203, 1163, 1362, 38, 92, "Input"],
Cell[45568, 1203, 201494, 3433, 405, "Input"],
Cell[247065, 4638, 201850, 3435, 405, "Input"],
Cell[448918, 8075, 4396, 137, 312, "Input"],
Cell[453317, 8214, 220, 6, 31, "Input"],
Cell[453540, 8222, 549, 17, 31, "Input"],
Cell[454092, 8241, 1024, 29, 72, "Input"],
Cell[455119, 8272, 651, 12, 52, "Input"],
Cell[455773, 8286, 7611, 192, 192, "Input"],
Cell[463387, 8480, 559, 8, 52, "Input"],
Cell[463949, 8490, 8193, 202, 372, "Input"],
Cell[472145, 8694, 1226, 36, 72, "Input"],
Cell[473374, 8732, 240, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[473639, 8743, 336, 6, 31, "Input"],
Cell[473978, 8751, 487, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474502, 8766, 274, 7, 31, "Input"],
Cell[474779, 8775, 102, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474918, 8781, 204, 5, 31, "Input"],
Cell[475125, 8788, 151, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475313, 8796, 1595, 41, 112, "Input"],
Cell[476911, 8839, 347, 7, 30, "Output"],
Cell[477261, 8848, 344, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477642, 8860, 562, 13, 31, "Input"],
Cell[478207, 8875, 1499, 35, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479743, 8915, 774, 22, 52, "Input"],
Cell[480520, 8939, 1426, 34, 50, "Output"],
Cell[481949, 8975, 1090, 26, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483076, 9006, 375, 11, 31, "Input"],
Cell[483454, 9019, 457, 11, 30, "Output"]
}, Open  ]],
Cell[483926, 9033, 3391, 70, 192, "Input"],
Cell[487320, 9105, 114273, 2832, 1803, "Input"]
}
]
*)

(* End of internal cache information *)
